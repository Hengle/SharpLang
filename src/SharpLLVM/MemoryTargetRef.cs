/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace SharpLLVM {

public partial struct MemoryTargetRef : System.IEquatable<MemoryTargetRef> {
    public MemoryTargetRef(global::System.IntPtr cPtr)
    {
        Value = cPtr;
    }

    public System.IntPtr Value;
    
    public bool Equals(MemoryTargetRef other)
    {
        return Value.Equals(other.Value);
    }

    public override bool Equals(object obj)
    {
        if (ReferenceEquals(null, obj)) return false;
        return obj is MemoryTargetRef && Equals((MemoryTargetRef)obj);
    }

    public override int GetHashCode()
    {
        return Value.GetHashCode();
    }

    public static bool operator ==(MemoryTargetRef left, MemoryTargetRef right)
    {
        return left.Equals(right);
    }

    public static bool operator !=(MemoryTargetRef left, MemoryTargetRef right)
    {
        return !left.Equals(right);
    }
}

}
