/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace SharpLLVM {

class LLVMPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="SWIGRegisterExceptionCallbacks_LLVM")]
    public static extern void SWIGRegisterExceptionCallbacks_LLVM(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_LLVM")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_LLVM(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_LLVM(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_LLVM(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(LLVMPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(LLVMPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="SWIGRegisterStringCallback_LLVM")]
    public static extern void SWIGRegisterStringCallback_LLVM(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_LLVM(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static LLVMPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeCore")]
  public static extern void InitializeCore(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Shutdown")]
  public static extern void Shutdown();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateMessage")]
  public static extern string CreateMessage(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DisposeMessage")]
  public static extern void DisposeMessage(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InstallFatalErrorHandler")]
  public static extern void InstallFatalErrorHandler(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ResetFatalErrorHandler")]
  public static extern void ResetFatalErrorHandler();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_EnablePrettyStackTrace")]
  public static extern void EnablePrettyStackTrace();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ContextCreate")]
  public static extern System.IntPtr ContextCreate();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetGlobalContext")]
  public static extern System.IntPtr GetGlobalContext();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ContextDispose")]
  public static extern void ContextDispose(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetDiagInfoDescription")]
  public static extern string GetDiagInfoDescription(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetDiagInfoSeverity")]
  public static extern int GetDiagInfoSeverity(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetMDKindIDInContext")]
  public static extern uint GetMDKindIDInContext(System.IntPtr jarg1, string jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetMDKindID")]
  public static extern uint GetMDKindID(string jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ModuleCreateWithName")]
  public static extern System.IntPtr ModuleCreateWithName(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ModuleCreateWithNameInContext")]
  public static extern System.IntPtr ModuleCreateWithNameInContext(string jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DisposeModule")]
  public static extern void DisposeModule(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetDataLayout")]
  public static extern string GetDataLayout(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetDataLayout")]
  public static extern void SetDataLayout(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTarget")]
  public static extern string GetTarget(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetTarget")]
  public static extern void SetTarget(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DumpModule")]
  public static extern void DumpModule(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PrintModuleToFile")]
  public static extern bool PrintModuleToFile(System.IntPtr jarg1, string jarg2, out string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PrintModuleToString")]
  public static extern string PrintModuleToString(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetModuleInlineAsm")]
  public static extern void SetModuleInlineAsm(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetModuleContext")]
  public static extern System.IntPtr GetModuleContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTypeByName")]
  public static extern System.IntPtr GetTypeByName(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNamedMetadataNumOperands")]
  public static extern uint GetNamedMetadataNumOperands(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNamedMetadataOperands")]
  public static extern void GetNamedMetadataOperands(System.IntPtr jarg1, string jarg2, out System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddNamedMetadataOperand")]
  public static extern void AddNamedMetadataOperand(System.IntPtr jarg1, string jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddFunction")]
  public static extern System.IntPtr AddFunction(System.IntPtr jarg1, string jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNamedFunction")]
  public static extern System.IntPtr GetNamedFunction(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFirstFunction")]
  public static extern System.IntPtr GetFirstFunction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetLastFunction")]
  public static extern System.IntPtr GetLastFunction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNextFunction")]
  public static extern System.IntPtr GetNextFunction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetPreviousFunction")]
  public static extern System.IntPtr GetPreviousFunction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTypeKind")]
  public static extern int GetTypeKind(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_TypeIsSized")]
  public static extern bool TypeIsSized(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTypeContext")]
  public static extern System.IntPtr GetTypeContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DumpType")]
  public static extern void DumpType(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PrintTypeToString")]
  public static extern string PrintTypeToString(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int1TypeInContext")]
  public static extern System.IntPtr Int1TypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int8TypeInContext")]
  public static extern System.IntPtr Int8TypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int16TypeInContext")]
  public static extern System.IntPtr Int16TypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int32TypeInContext")]
  public static extern System.IntPtr Int32TypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int64TypeInContext")]
  public static extern System.IntPtr Int64TypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IntTypeInContext")]
  public static extern System.IntPtr IntTypeInContext(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int1Type")]
  public static extern System.IntPtr Int1Type();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int8Type")]
  public static extern System.IntPtr Int8Type();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int16Type")]
  public static extern System.IntPtr Int16Type();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int32Type")]
  public static extern System.IntPtr Int32Type();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_Int64Type")]
  public static extern System.IntPtr Int64Type();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IntType")]
  public static extern System.IntPtr IntType(uint jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetIntTypeWidth")]
  public static extern uint GetIntTypeWidth(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_HalfTypeInContext")]
  public static extern System.IntPtr HalfTypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_FloatTypeInContext")]
  public static extern System.IntPtr FloatTypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DoubleTypeInContext")]
  public static extern System.IntPtr DoubleTypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_X86FP80TypeInContext")]
  public static extern System.IntPtr X86FP80TypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_FP128TypeInContext")]
  public static extern System.IntPtr FP128TypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PPCFP128TypeInContext")]
  public static extern System.IntPtr PPCFP128TypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_HalfType")]
  public static extern System.IntPtr HalfType();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_FloatType")]
  public static extern System.IntPtr FloatType();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DoubleType")]
  public static extern System.IntPtr DoubleType();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_X86FP80Type")]
  public static extern System.IntPtr X86FP80Type();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_FP128Type")]
  public static extern System.IntPtr FP128Type();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PPCFP128Type")]
  public static extern System.IntPtr PPCFP128Type();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_FunctionType")]
  public static extern System.IntPtr FunctionType(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsFunctionVarArg")]
  public static extern bool IsFunctionVarArg(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetReturnType")]
  public static extern System.IntPtr GetReturnType(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CountParamTypes")]
  public static extern uint CountParamTypes(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetParamTypes")]
  public static extern void GetParamTypes(System.IntPtr jarg1, out System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_StructTypeInContext")]
  public static extern System.IntPtr StructTypeInContext(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_StructType")]
  public static extern System.IntPtr StructType(System.IntPtr arg1_data, uint jarg1, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_StructCreateNamed")]
  public static extern System.IntPtr StructCreateNamed(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetStructName")]
  public static extern string GetStructName(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_StructSetBody")]
  public static extern void StructSetBody(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CountStructElementTypes")]
  public static extern uint CountStructElementTypes(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetStructElementTypes")]
  public static extern void GetStructElementTypes(System.IntPtr jarg1, out System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsPackedStruct")]
  public static extern bool IsPackedStruct(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsOpaqueStruct")]
  public static extern bool IsOpaqueStruct(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetElementType")]
  public static extern System.IntPtr GetElementType(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ArrayType")]
  public static extern System.IntPtr ArrayType(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetArrayLength")]
  public static extern uint GetArrayLength(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PointerType")]
  public static extern System.IntPtr PointerType(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetPointerAddressSpace")]
  public static extern uint GetPointerAddressSpace(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_VectorType")]
  public static extern System.IntPtr VectorType(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetVectorSize")]
  public static extern uint GetVectorSize(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_VoidTypeInContext")]
  public static extern System.IntPtr VoidTypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_LabelTypeInContext")]
  public static extern System.IntPtr LabelTypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_X86MMXTypeInContext")]
  public static extern System.IntPtr X86MMXTypeInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_VoidType")]
  public static extern System.IntPtr VoidType();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_LabelType")]
  public static extern System.IntPtr LabelType();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_X86MMXType")]
  public static extern System.IntPtr X86MMXType();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_TypeOf")]
  public static extern System.IntPtr TypeOf(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetValueName")]
  public static extern string GetValueName(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetValueName")]
  public static extern void SetValueName(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DumpValue")]
  public static extern void DumpValue(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PrintValueToString")]
  public static extern string PrintValueToString(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ReplaceAllUsesWith")]
  public static extern void ReplaceAllUsesWith(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsConstant")]
  public static extern bool IsConstant(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsUndef")]
  public static extern bool IsUndef(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAArgument")]
  public static extern System.IntPtr IsAArgument(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsABasicBlock")]
  public static extern System.IntPtr IsABasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAInlineAsm")]
  public static extern System.IntPtr IsAInlineAsm(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAMDNode")]
  public static extern System.IntPtr IsAMDNode(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAMDString")]
  public static extern System.IntPtr IsAMDString(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAUser")]
  public static extern System.IntPtr IsAUser(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstant")]
  public static extern System.IntPtr IsAConstant(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsABlockAddress")]
  public static extern System.IntPtr IsABlockAddress(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantAggregateZero")]
  public static extern System.IntPtr IsAConstantAggregateZero(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantArray")]
  public static extern System.IntPtr IsAConstantArray(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantDataSequential")]
  public static extern System.IntPtr IsAConstantDataSequential(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantDataArray")]
  public static extern System.IntPtr IsAConstantDataArray(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantDataVector")]
  public static extern System.IntPtr IsAConstantDataVector(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantExpr")]
  public static extern System.IntPtr IsAConstantExpr(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantFP")]
  public static extern System.IntPtr IsAConstantFP(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantInt")]
  public static extern System.IntPtr IsAConstantInt(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantPointerNull")]
  public static extern System.IntPtr IsAConstantPointerNull(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantStruct")]
  public static extern System.IntPtr IsAConstantStruct(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAConstantVector")]
  public static extern System.IntPtr IsAConstantVector(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAGlobalValue")]
  public static extern System.IntPtr IsAGlobalValue(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAGlobalAlias")]
  public static extern System.IntPtr IsAGlobalAlias(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAGlobalObject")]
  public static extern System.IntPtr IsAGlobalObject(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAFunction")]
  public static extern System.IntPtr IsAFunction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAGlobalVariable")]
  public static extern System.IntPtr IsAGlobalVariable(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAUndefValue")]
  public static extern System.IntPtr IsAUndefValue(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAInstruction")]
  public static extern System.IntPtr IsAInstruction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsABinaryOperator")]
  public static extern System.IntPtr IsABinaryOperator(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsACallInst")]
  public static extern System.IntPtr IsACallInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAIntrinsicInst")]
  public static extern System.IntPtr IsAIntrinsicInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsADbgInfoIntrinsic")]
  public static extern System.IntPtr IsADbgInfoIntrinsic(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsADbgDeclareInst")]
  public static extern System.IntPtr IsADbgDeclareInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAMemIntrinsic")]
  public static extern System.IntPtr IsAMemIntrinsic(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAMemCpyInst")]
  public static extern System.IntPtr IsAMemCpyInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAMemMoveInst")]
  public static extern System.IntPtr IsAMemMoveInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAMemSetInst")]
  public static extern System.IntPtr IsAMemSetInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsACmpInst")]
  public static extern System.IntPtr IsACmpInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAFCmpInst")]
  public static extern System.IntPtr IsAFCmpInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAICmpInst")]
  public static extern System.IntPtr IsAICmpInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAExtractElementInst")]
  public static extern System.IntPtr IsAExtractElementInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAGetElementPtrInst")]
  public static extern System.IntPtr IsAGetElementPtrInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAInsertElementInst")]
  public static extern System.IntPtr IsAInsertElementInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAInsertValueInst")]
  public static extern System.IntPtr IsAInsertValueInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsALandingPadInst")]
  public static extern System.IntPtr IsALandingPadInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAPHINode")]
  public static extern System.IntPtr IsAPHINode(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsASelectInst")]
  public static extern System.IntPtr IsASelectInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAShuffleVectorInst")]
  public static extern System.IntPtr IsAShuffleVectorInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAStoreInst")]
  public static extern System.IntPtr IsAStoreInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsATerminatorInst")]
  public static extern System.IntPtr IsATerminatorInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsABranchInst")]
  public static extern System.IntPtr IsABranchInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAIndirectBrInst")]
  public static extern System.IntPtr IsAIndirectBrInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAInvokeInst")]
  public static extern System.IntPtr IsAInvokeInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAReturnInst")]
  public static extern System.IntPtr IsAReturnInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsASwitchInst")]
  public static extern System.IntPtr IsASwitchInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAUnreachableInst")]
  public static extern System.IntPtr IsAUnreachableInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAResumeInst")]
  public static extern System.IntPtr IsAResumeInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAUnaryInstruction")]
  public static extern System.IntPtr IsAUnaryInstruction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAAllocaInst")]
  public static extern System.IntPtr IsAAllocaInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsACastInst")]
  public static extern System.IntPtr IsACastInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAAddrSpaceCastInst")]
  public static extern System.IntPtr IsAAddrSpaceCastInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsABitCastInst")]
  public static extern System.IntPtr IsABitCastInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAFPExtInst")]
  public static extern System.IntPtr IsAFPExtInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAFPToSIInst")]
  public static extern System.IntPtr IsAFPToSIInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAFPToUIInst")]
  public static extern System.IntPtr IsAFPToUIInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAFPTruncInst")]
  public static extern System.IntPtr IsAFPTruncInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAIntToPtrInst")]
  public static extern System.IntPtr IsAIntToPtrInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAPtrToIntInst")]
  public static extern System.IntPtr IsAPtrToIntInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsASExtInst")]
  public static extern System.IntPtr IsASExtInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsASIToFPInst")]
  public static extern System.IntPtr IsASIToFPInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsATruncInst")]
  public static extern System.IntPtr IsATruncInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAUIToFPInst")]
  public static extern System.IntPtr IsAUIToFPInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAZExtInst")]
  public static extern System.IntPtr IsAZExtInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAExtractValueInst")]
  public static extern System.IntPtr IsAExtractValueInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsALoadInst")]
  public static extern System.IntPtr IsALoadInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsAVAArgInst")]
  public static extern System.IntPtr IsAVAArgInst(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFirstUse")]
  public static extern System.IntPtr GetFirstUse(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNextUse")]
  public static extern System.IntPtr GetNextUse(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetUser")]
  public static extern System.IntPtr GetUser(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetUsedValue")]
  public static extern System.IntPtr GetUsedValue(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetOperand")]
  public static extern System.IntPtr GetOperand(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetOperand")]
  public static extern void SetOperand(System.IntPtr jarg1, uint jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNumOperands")]
  public static extern int GetNumOperands(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNull")]
  public static extern System.IntPtr ConstNull(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstAllOnes")]
  public static extern System.IntPtr ConstAllOnes(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetUndef")]
  public static extern System.IntPtr GetUndef(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsNull")]
  public static extern bool IsNull(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstPointerNull")]
  public static extern System.IntPtr ConstPointerNull(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstInt")]
  public static extern System.IntPtr ConstInt(System.IntPtr jarg1, ulong jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstIntOfArbitraryPrecision")]
  public static extern System.IntPtr ConstIntOfArbitraryPrecision(System.IntPtr jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstIntOfString")]
  public static extern System.IntPtr ConstIntOfString(System.IntPtr jarg1, string jarg2, byte jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstIntOfStringAndSize")]
  public static extern System.IntPtr ConstIntOfStringAndSize(System.IntPtr jarg1, string jarg2, uint jarg3, byte jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstReal")]
  public static extern System.IntPtr ConstReal(System.IntPtr jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstRealOfString")]
  public static extern System.IntPtr ConstRealOfString(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstRealOfStringAndSize")]
  public static extern System.IntPtr ConstRealOfStringAndSize(System.IntPtr jarg1, string jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstIntGetZExtValue")]
  public static extern ulong ConstIntGetZExtValue(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstIntGetSExtValue")]
  public static extern long ConstIntGetSExtValue(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstStringInContext")]
  public static extern System.IntPtr ConstStringInContext(System.IntPtr jarg1, string jarg2, uint jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstString")]
  public static extern System.IntPtr ConstString(string jarg1, uint jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstStructInContext")]
  public static extern System.IntPtr ConstStructInContext(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstStruct")]
  public static extern System.IntPtr ConstStruct(System.IntPtr arg1_data, uint jarg1, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstArray")]
  public static extern System.IntPtr ConstArray(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNamedStruct")]
  public static extern System.IntPtr ConstNamedStruct(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstVector")]
  public static extern System.IntPtr ConstVector(System.IntPtr arg1_data, uint jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetConstOpcode")]
  public static extern int GetConstOpcode(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AlignOf")]
  public static extern System.IntPtr AlignOf(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SizeOf")]
  public static extern System.IntPtr SizeOf(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNeg")]
  public static extern System.IntPtr ConstNeg(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNSWNeg")]
  public static extern System.IntPtr ConstNSWNeg(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNUWNeg")]
  public static extern System.IntPtr ConstNUWNeg(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFNeg")]
  public static extern System.IntPtr ConstFNeg(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNot")]
  public static extern System.IntPtr ConstNot(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstAdd")]
  public static extern System.IntPtr ConstAdd(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNSWAdd")]
  public static extern System.IntPtr ConstNSWAdd(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNUWAdd")]
  public static extern System.IntPtr ConstNUWAdd(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFAdd")]
  public static extern System.IntPtr ConstFAdd(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstSub")]
  public static extern System.IntPtr ConstSub(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNSWSub")]
  public static extern System.IntPtr ConstNSWSub(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNUWSub")]
  public static extern System.IntPtr ConstNUWSub(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFSub")]
  public static extern System.IntPtr ConstFSub(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstMul")]
  public static extern System.IntPtr ConstMul(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNSWMul")]
  public static extern System.IntPtr ConstNSWMul(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstNUWMul")]
  public static extern System.IntPtr ConstNUWMul(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFMul")]
  public static extern System.IntPtr ConstFMul(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstUDiv")]
  public static extern System.IntPtr ConstUDiv(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstSDiv")]
  public static extern System.IntPtr ConstSDiv(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstExactSDiv")]
  public static extern System.IntPtr ConstExactSDiv(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFDiv")]
  public static extern System.IntPtr ConstFDiv(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstURem")]
  public static extern System.IntPtr ConstURem(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstSRem")]
  public static extern System.IntPtr ConstSRem(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFRem")]
  public static extern System.IntPtr ConstFRem(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstAnd")]
  public static extern System.IntPtr ConstAnd(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstOr")]
  public static extern System.IntPtr ConstOr(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstXor")]
  public static extern System.IntPtr ConstXor(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstICmp")]
  public static extern System.IntPtr ConstICmp(int jarg1, System.IntPtr jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFCmp")]
  public static extern System.IntPtr ConstFCmp(int jarg1, System.IntPtr jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstShl")]
  public static extern System.IntPtr ConstShl(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstLShr")]
  public static extern System.IntPtr ConstLShr(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstAShr")]
  public static extern System.IntPtr ConstAShr(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstGEP")]
  public static extern System.IntPtr ConstGEP(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstInBoundsGEP")]
  public static extern System.IntPtr ConstInBoundsGEP(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstTrunc")]
  public static extern System.IntPtr ConstTrunc(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstSExt")]
  public static extern System.IntPtr ConstSExt(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstZExt")]
  public static extern System.IntPtr ConstZExt(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFPTrunc")]
  public static extern System.IntPtr ConstFPTrunc(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFPExt")]
  public static extern System.IntPtr ConstFPExt(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstUIToFP")]
  public static extern System.IntPtr ConstUIToFP(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstSIToFP")]
  public static extern System.IntPtr ConstSIToFP(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFPToUI")]
  public static extern System.IntPtr ConstFPToUI(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFPToSI")]
  public static extern System.IntPtr ConstFPToSI(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstPtrToInt")]
  public static extern System.IntPtr ConstPtrToInt(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstIntToPtr")]
  public static extern System.IntPtr ConstIntToPtr(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstBitCast")]
  public static extern System.IntPtr ConstBitCast(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstAddrSpaceCast")]
  public static extern System.IntPtr ConstAddrSpaceCast(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstZExtOrBitCast")]
  public static extern System.IntPtr ConstZExtOrBitCast(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstSExtOrBitCast")]
  public static extern System.IntPtr ConstSExtOrBitCast(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstTruncOrBitCast")]
  public static extern System.IntPtr ConstTruncOrBitCast(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstPointerCast")]
  public static extern System.IntPtr ConstPointerCast(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstIntCast")]
  public static extern System.IntPtr ConstIntCast(System.IntPtr jarg1, System.IntPtr jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstFPCast")]
  public static extern System.IntPtr ConstFPCast(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstSelect")]
  public static extern System.IntPtr ConstSelect(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstExtractElement")]
  public static extern System.IntPtr ConstExtractElement(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstInsertElement")]
  public static extern System.IntPtr ConstInsertElement(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstShuffleVector")]
  public static extern System.IntPtr ConstShuffleVector(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstExtractValue")]
  public static extern System.IntPtr ConstExtractValue(System.IntPtr jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstInsertValue")]
  public static extern System.IntPtr ConstInsertValue(System.IntPtr jarg1, System.IntPtr jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ConstInlineAsm")]
  public static extern System.IntPtr ConstInlineAsm(System.IntPtr jarg1, string jarg2, string jarg3, bool jarg4, bool jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BlockAddress")]
  public static extern System.IntPtr BlockAddress(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetGlobalParent")]
  public static extern System.IntPtr GetGlobalParent(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsDeclaration")]
  public static extern bool IsDeclaration(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetLinkage")]
  public static extern int GetLinkage(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetLinkage")]
  public static extern void SetLinkage(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetSection")]
  public static extern string GetSection(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetSection")]
  public static extern void SetSection(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetVisibility")]
  public static extern int GetVisibility(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetVisibility")]
  public static extern void SetVisibility(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetDLLStorageClass")]
  public static extern int GetDLLStorageClass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetDLLStorageClass")]
  public static extern void SetDLLStorageClass(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_HasUnnamedAddr")]
  public static extern bool HasUnnamedAddr(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetUnnamedAddr")]
  public static extern void SetUnnamedAddr(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetAlignment")]
  public static extern uint GetAlignment(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetAlignment")]
  public static extern void SetAlignment(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddGlobal")]
  public static extern System.IntPtr AddGlobal(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddGlobalInAddressSpace")]
  public static extern System.IntPtr AddGlobalInAddressSpace(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3, uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNamedGlobal")]
  public static extern System.IntPtr GetNamedGlobal(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFirstGlobal")]
  public static extern System.IntPtr GetFirstGlobal(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetLastGlobal")]
  public static extern System.IntPtr GetLastGlobal(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNextGlobal")]
  public static extern System.IntPtr GetNextGlobal(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetPreviousGlobal")]
  public static extern System.IntPtr GetPreviousGlobal(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DeleteGlobal")]
  public static extern void DeleteGlobal(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetInitializer")]
  public static extern System.IntPtr GetInitializer(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetInitializer")]
  public static extern void SetInitializer(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsThreadLocal")]
  public static extern bool IsThreadLocal(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetThreadLocal")]
  public static extern void SetThreadLocal(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsGlobalConstant")]
  public static extern bool IsGlobalConstant(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetGlobalConstant")]
  public static extern void SetGlobalConstant(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetThreadLocalMode")]
  public static extern int GetThreadLocalMode(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetThreadLocalMode")]
  public static extern void SetThreadLocalMode(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsExternallyInitialized")]
  public static extern bool IsExternallyInitialized(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetExternallyInitialized")]
  public static extern void SetExternallyInitialized(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddAlias")]
  public static extern System.IntPtr AddAlias(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DeleteFunction")]
  public static extern void DeleteFunction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetIntrinsicID")]
  public static extern uint GetIntrinsicID(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFunctionCallConv")]
  public static extern uint GetFunctionCallConv(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetFunctionCallConv")]
  public static extern void SetFunctionCallConv(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetGC")]
  public static extern string GetGC(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetGC")]
  public static extern void SetGC(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddFunctionAttr")]
  public static extern void AddFunctionAttr(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddTargetDependentFunctionAttr")]
  public static extern void AddTargetDependentFunctionAttr(System.IntPtr jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFunctionAttr")]
  public static extern int GetFunctionAttr(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_RemoveFunctionAttr")]
  public static extern void RemoveFunctionAttr(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CountParams")]
  public static extern uint CountParams(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetParams")]
  public static extern void GetParams(System.IntPtr jarg1, out System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetParam")]
  public static extern System.IntPtr GetParam(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetParamParent")]
  public static extern System.IntPtr GetParamParent(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFirstParam")]
  public static extern System.IntPtr GetFirstParam(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetLastParam")]
  public static extern System.IntPtr GetLastParam(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNextParam")]
  public static extern System.IntPtr GetNextParam(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetPreviousParam")]
  public static extern System.IntPtr GetPreviousParam(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddAttribute")]
  public static extern void AddAttribute(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_RemoveAttribute")]
  public static extern void RemoveAttribute(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetAttribute")]
  public static extern int GetAttribute(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetParamAlignment")]
  public static extern void SetParamAlignment(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_MDStringInContext")]
  public static extern System.IntPtr MDStringInContext(System.IntPtr jarg1, string jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_MDString")]
  public static extern System.IntPtr MDString(string jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_MDNodeInContext")]
  public static extern System.IntPtr MDNodeInContext(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_MDNode")]
  public static extern System.IntPtr MDNode(System.IntPtr arg1_data, uint jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetMDString")]
  public static extern string GetMDString(System.IntPtr jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetMDNodeNumOperands")]
  public static extern uint GetMDNodeNumOperands(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetMDNodeOperands")]
  public static extern void GetMDNodeOperands(System.IntPtr jarg1, out System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BasicBlockAsValue")]
  public static extern System.IntPtr BasicBlockAsValue(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ValueIsBasicBlock")]
  public static extern bool ValueIsBasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ValueAsBasicBlock")]
  public static extern System.IntPtr ValueAsBasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBasicBlockParent")]
  public static extern System.IntPtr GetBasicBlockParent(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBasicBlockTerminator")]
  public static extern System.IntPtr GetBasicBlockTerminator(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CountBasicBlocks")]
  public static extern uint CountBasicBlocks(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBasicBlocks")]
  public static extern void GetBasicBlocks(System.IntPtr jarg1, out System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFirstBasicBlock")]
  public static extern System.IntPtr GetFirstBasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetLastBasicBlock")]
  public static extern System.IntPtr GetLastBasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNextBasicBlock")]
  public static extern System.IntPtr GetNextBasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetPreviousBasicBlock")]
  public static extern System.IntPtr GetPreviousBasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetEntryBasicBlock")]
  public static extern System.IntPtr GetEntryBasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AppendBasicBlockInContext")]
  public static extern System.IntPtr AppendBasicBlockInContext(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AppendBasicBlock")]
  public static extern System.IntPtr AppendBasicBlock(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InsertBasicBlockInContext")]
  public static extern System.IntPtr InsertBasicBlockInContext(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InsertBasicBlock")]
  public static extern System.IntPtr InsertBasicBlock(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DeleteBasicBlock")]
  public static extern void DeleteBasicBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_RemoveBasicBlockFromParent")]
  public static extern void RemoveBasicBlockFromParent(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_MoveBasicBlockBefore")]
  public static extern void MoveBasicBlockBefore(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_MoveBasicBlockAfter")]
  public static extern void MoveBasicBlockAfter(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFirstInstruction")]
  public static extern System.IntPtr GetFirstInstruction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetLastInstruction")]
  public static extern System.IntPtr GetLastInstruction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_HasMetadata")]
  public static extern int HasMetadata(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetMetadata")]
  public static extern System.IntPtr GetMetadata(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetMetadata")]
  public static extern void SetMetadata(System.IntPtr jarg1, uint jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetInstructionParent")]
  public static extern System.IntPtr GetInstructionParent(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNextInstruction")]
  public static extern System.IntPtr GetNextInstruction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetPreviousInstruction")]
  public static extern System.IntPtr GetPreviousInstruction(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InstructionEraseFromParent")]
  public static extern void InstructionEraseFromParent(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetInstructionOpcode")]
  public static extern int GetInstructionOpcode(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetICmpPredicate")]
  public static extern int GetICmpPredicate(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetInstructionCallConv")]
  public static extern void SetInstructionCallConv(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetInstructionCallConv")]
  public static extern uint GetInstructionCallConv(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddInstrAttribute")]
  public static extern void AddInstrAttribute(System.IntPtr jarg1, uint jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_RemoveInstrAttribute")]
  public static extern void RemoveInstrAttribute(System.IntPtr jarg1, uint jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetInstrParamAlignment")]
  public static extern void SetInstrParamAlignment(System.IntPtr jarg1, uint jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsTailCall")]
  public static extern bool IsTailCall(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetTailCall")]
  public static extern void SetTailCall(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetSwitchDefaultDest")]
  public static extern System.IntPtr GetSwitchDefaultDest(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddIncoming")]
  public static extern void AddIncoming(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr arg3_data, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CountIncoming")]
  public static extern uint CountIncoming(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetIncomingValue")]
  public static extern System.IntPtr GetIncomingValue(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetIncomingBlock")]
  public static extern System.IntPtr GetIncomingBlock(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateBuilderInContext")]
  public static extern System.IntPtr CreateBuilderInContext(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateBuilder")]
  public static extern System.IntPtr CreateBuilder();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PositionBuilder")]
  public static extern void PositionBuilder(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PositionBuilderBefore")]
  public static extern void PositionBuilderBefore(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PositionBuilderAtEnd")]
  public static extern void PositionBuilderAtEnd(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetInsertBlock")]
  public static extern System.IntPtr GetInsertBlock(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ClearInsertionPosition")]
  public static extern void ClearInsertionPosition(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InsertIntoBuilder")]
  public static extern void InsertIntoBuilder(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InsertIntoBuilderWithName")]
  public static extern void InsertIntoBuilderWithName(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DisposeBuilder")]
  public static extern void DisposeBuilder(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetCurrentDebugLocation")]
  public static extern void SetCurrentDebugLocation(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetCurrentDebugLocation")]
  public static extern System.IntPtr GetCurrentDebugLocation(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetInstDebugLocation")]
  public static extern void SetInstDebugLocation(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildRetVoid")]
  public static extern System.IntPtr BuildRetVoid(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildRet")]
  public static extern System.IntPtr BuildRet(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildAggregateRet")]
  public static extern System.IntPtr BuildAggregateRet(System.IntPtr jarg1, System.IntPtr arg2_data, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildBr")]
  public static extern System.IntPtr BuildBr(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildCondBr")]
  public static extern System.IntPtr BuildCondBr(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, System.IntPtr jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildSwitch")]
  public static extern System.IntPtr BuildSwitch(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildIndirectBr")]
  public static extern System.IntPtr BuildIndirectBr(System.IntPtr jarg1, System.IntPtr jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildInvoke")]
  public static extern System.IntPtr BuildInvoke(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr arg3_data, uint jarg3, System.IntPtr jarg5, System.IntPtr jarg6, string jarg7);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildLandingPad")]
  public static extern System.IntPtr BuildLandingPad(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, uint jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildResume")]
  public static extern System.IntPtr BuildResume(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildUnreachable")]
  public static extern System.IntPtr BuildUnreachable(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddCase")]
  public static extern void AddCase(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddDestination")]
  public static extern void AddDestination(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddClause")]
  public static extern void AddClause(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetCleanup")]
  public static extern void SetCleanup(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildAdd")]
  public static extern System.IntPtr BuildAdd(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNSWAdd")]
  public static extern System.IntPtr BuildNSWAdd(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNUWAdd")]
  public static extern System.IntPtr BuildNUWAdd(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFAdd")]
  public static extern System.IntPtr BuildFAdd(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildSub")]
  public static extern System.IntPtr BuildSub(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNSWSub")]
  public static extern System.IntPtr BuildNSWSub(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNUWSub")]
  public static extern System.IntPtr BuildNUWSub(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFSub")]
  public static extern System.IntPtr BuildFSub(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildMul")]
  public static extern System.IntPtr BuildMul(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNSWMul")]
  public static extern System.IntPtr BuildNSWMul(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNUWMul")]
  public static extern System.IntPtr BuildNUWMul(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFMul")]
  public static extern System.IntPtr BuildFMul(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildUDiv")]
  public static extern System.IntPtr BuildUDiv(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildSDiv")]
  public static extern System.IntPtr BuildSDiv(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildExactSDiv")]
  public static extern System.IntPtr BuildExactSDiv(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFDiv")]
  public static extern System.IntPtr BuildFDiv(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildURem")]
  public static extern System.IntPtr BuildURem(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildSRem")]
  public static extern System.IntPtr BuildSRem(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFRem")]
  public static extern System.IntPtr BuildFRem(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildShl")]
  public static extern System.IntPtr BuildShl(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildLShr")]
  public static extern System.IntPtr BuildLShr(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildAShr")]
  public static extern System.IntPtr BuildAShr(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildAnd")]
  public static extern System.IntPtr BuildAnd(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildOr")]
  public static extern System.IntPtr BuildOr(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildXor")]
  public static extern System.IntPtr BuildXor(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildBinOp")]
  public static extern System.IntPtr BuildBinOp(System.IntPtr jarg1, int jarg2, System.IntPtr jarg3, System.IntPtr jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNeg")]
  public static extern System.IntPtr BuildNeg(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNSWNeg")]
  public static extern System.IntPtr BuildNSWNeg(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNUWNeg")]
  public static extern System.IntPtr BuildNUWNeg(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFNeg")]
  public static extern System.IntPtr BuildFNeg(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildNot")]
  public static extern System.IntPtr BuildNot(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildMalloc")]
  public static extern System.IntPtr BuildMalloc(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildArrayMalloc")]
  public static extern System.IntPtr BuildArrayMalloc(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildAlloca")]
  public static extern System.IntPtr BuildAlloca(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildArrayAlloca")]
  public static extern System.IntPtr BuildArrayAlloca(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFree")]
  public static extern System.IntPtr BuildFree(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildLoad")]
  public static extern System.IntPtr BuildLoad(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildStore")]
  public static extern System.IntPtr BuildStore(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildGEP")]
  public static extern System.IntPtr BuildGEP(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr arg3_data, uint jarg3, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildInBoundsGEP")]
  public static extern System.IntPtr BuildInBoundsGEP(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr arg3_data, uint jarg3, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildStructGEP")]
  public static extern System.IntPtr BuildStructGEP(System.IntPtr jarg1, System.IntPtr jarg2, uint jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildGlobalString")]
  public static extern System.IntPtr BuildGlobalString(System.IntPtr jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildGlobalStringPtr")]
  public static extern System.IntPtr BuildGlobalStringPtr(System.IntPtr jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetVolatile")]
  public static extern bool GetVolatile(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetVolatile")]
  public static extern void SetVolatile(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildTrunc")]
  public static extern System.IntPtr BuildTrunc(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildZExt")]
  public static extern System.IntPtr BuildZExt(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildSExt")]
  public static extern System.IntPtr BuildSExt(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFPToUI")]
  public static extern System.IntPtr BuildFPToUI(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFPToSI")]
  public static extern System.IntPtr BuildFPToSI(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildUIToFP")]
  public static extern System.IntPtr BuildUIToFP(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildSIToFP")]
  public static extern System.IntPtr BuildSIToFP(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFPTrunc")]
  public static extern System.IntPtr BuildFPTrunc(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFPExt")]
  public static extern System.IntPtr BuildFPExt(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildPtrToInt")]
  public static extern System.IntPtr BuildPtrToInt(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildIntToPtr")]
  public static extern System.IntPtr BuildIntToPtr(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildBitCast")]
  public static extern System.IntPtr BuildBitCast(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildAddrSpaceCast")]
  public static extern System.IntPtr BuildAddrSpaceCast(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildZExtOrBitCast")]
  public static extern System.IntPtr BuildZExtOrBitCast(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildSExtOrBitCast")]
  public static extern System.IntPtr BuildSExtOrBitCast(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildTruncOrBitCast")]
  public static extern System.IntPtr BuildTruncOrBitCast(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildCast")]
  public static extern System.IntPtr BuildCast(System.IntPtr jarg1, int jarg2, System.IntPtr jarg3, System.IntPtr jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildPointerCast")]
  public static extern System.IntPtr BuildPointerCast(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildIntCast")]
  public static extern System.IntPtr BuildIntCast(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFPCast")]
  public static extern System.IntPtr BuildFPCast(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildICmp")]
  public static extern System.IntPtr BuildICmp(System.IntPtr jarg1, int jarg2, System.IntPtr jarg3, System.IntPtr jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFCmp")]
  public static extern System.IntPtr BuildFCmp(System.IntPtr jarg1, int jarg2, System.IntPtr jarg3, System.IntPtr jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildPhi")]
  public static extern System.IntPtr BuildPhi(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildCall")]
  public static extern System.IntPtr BuildCall(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr arg3_data, uint jarg3, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildSelect")]
  public static extern System.IntPtr BuildSelect(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, System.IntPtr jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildVAArg")]
  public static extern System.IntPtr BuildVAArg(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildExtractElement")]
  public static extern System.IntPtr BuildExtractElement(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildInsertElement")]
  public static extern System.IntPtr BuildInsertElement(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, System.IntPtr jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildShuffleVector")]
  public static extern System.IntPtr BuildShuffleVector(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, System.IntPtr jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildExtractValue")]
  public static extern System.IntPtr BuildExtractValue(System.IntPtr jarg1, System.IntPtr jarg2, uint jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildInsertValue")]
  public static extern System.IntPtr BuildInsertValue(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, uint jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildIsNull")]
  public static extern System.IntPtr BuildIsNull(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildIsNotNull")]
  public static extern System.IntPtr BuildIsNotNull(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildPtrDiff")]
  public static extern System.IntPtr BuildPtrDiff(System.IntPtr jarg1, System.IntPtr jarg2, System.IntPtr jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildFence")]
  public static extern System.IntPtr BuildFence(System.IntPtr jarg1, int jarg2, bool jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_BuildAtomicRMW")]
  public static extern System.IntPtr BuildAtomicRMW(System.IntPtr jarg1, int jarg2, System.IntPtr jarg3, System.IntPtr jarg4, int jarg5, bool jarg6);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateModuleProviderForExistingModule")]
  public static extern System.IntPtr CreateModuleProviderForExistingModule(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DisposeModuleProvider")]
  public static extern void DisposeModuleProvider(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateMemoryBufferWithContentsOfFile")]
  public static extern bool CreateMemoryBufferWithContentsOfFile(string jarg1, out System.IntPtr jarg2, out string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateMemoryBufferWithSTDIN")]
  public static extern bool CreateMemoryBufferWithSTDIN(out System.IntPtr jarg1, out string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateMemoryBufferWithMemoryRange")]
  public static extern System.IntPtr CreateMemoryBufferWithMemoryRange(string jarg1, uint jarg2, string jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateMemoryBufferWithMemoryRangeCopy")]
  public static extern System.IntPtr CreateMemoryBufferWithMemoryRangeCopy(string jarg1, uint jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBufferStart")]
  public static extern string GetBufferStart(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBufferSize")]
  public static extern uint GetBufferSize(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DisposeMemoryBuffer")]
  public static extern void DisposeMemoryBuffer(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetGlobalPassRegistry")]
  public static extern System.IntPtr GetGlobalPassRegistry();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreatePassManager")]
  public static extern System.IntPtr CreatePassManager();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateFunctionPassManagerForModule")]
  public static extern System.IntPtr CreateFunctionPassManagerForModule(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateFunctionPassManager")]
  public static extern System.IntPtr CreateFunctionPassManager(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_RunPassManager")]
  public static extern bool RunPassManager(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeFunctionPassManager")]
  public static extern bool InitializeFunctionPassManager(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_RunFunctionPassManager")]
  public static extern bool RunFunctionPassManager(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_FinalizeFunctionPassManager")]
  public static extern bool FinalizeFunctionPassManager(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DisposePassManager")]
  public static extern void DisposePassManager(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_StartMultithreaded")]
  public static extern bool StartMultithreaded();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_StopMultithreaded")]
  public static extern void StopMultithreaded();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IsMultithreaded")]
  public static extern bool IsMultithreaded();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ParseBitcode")]
  public static extern bool ParseBitcode(System.IntPtr jarg1, out System.IntPtr jarg2, out string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ParseBitcodeInContext")]
  public static extern bool ParseBitcodeInContext(System.IntPtr jarg1, System.IntPtr jarg2, out System.IntPtr jarg3, out string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBitcodeModuleInContext")]
  public static extern bool GetBitcodeModuleInContext(System.IntPtr jarg1, System.IntPtr jarg2, out System.IntPtr jarg3, out string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBitcodeModule")]
  public static extern bool GetBitcodeModule(System.IntPtr jarg1, out System.IntPtr jarg2, out string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBitcodeModuleProviderInContext")]
  public static extern bool GetBitcodeModuleProviderInContext(System.IntPtr jarg1, System.IntPtr jarg2, out System.IntPtr jarg3, out string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetBitcodeModuleProvider")]
  public static extern bool GetBitcodeModuleProvider(System.IntPtr jarg1, out System.IntPtr jarg2, out string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_WriteBitcodeToFile")]
  public static extern int WriteBitcodeToFile(System.IntPtr jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_WriteBitcodeToFD")]
  public static extern int WriteBitcodeToFD(System.IntPtr jarg1, int jarg2, int jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_WriteBitcodeToFileHandle")]
  public static extern int WriteBitcodeToFileHandle(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddArgumentPromotionPass")]
  public static extern void AddArgumentPromotionPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddConstantMergePass")]
  public static extern void AddConstantMergePass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddDeadArgEliminationPass")]
  public static extern void AddDeadArgEliminationPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddFunctionAttrsPass")]
  public static extern void AddFunctionAttrsPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddFunctionInliningPass")]
  public static extern void AddFunctionInliningPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddAlwaysInlinerPass")]
  public static extern void AddAlwaysInlinerPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddGlobalDCEPass")]
  public static extern void AddGlobalDCEPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddGlobalOptimizerPass")]
  public static extern void AddGlobalOptimizerPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddIPConstantPropagationPass")]
  public static extern void AddIPConstantPropagationPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddPruneEHPass")]
  public static extern void AddPruneEHPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddIPSCCPPass")]
  public static extern void AddIPSCCPPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddInternalizePass")]
  public static extern void AddInternalizePass(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddStripDeadPrototypesPass")]
  public static extern void AddStripDeadPrototypesPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddStripSymbolsPass")]
  public static extern void AddStripSymbolsPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderCreate")]
  public static extern System.IntPtr PassManagerBuilderCreate();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderDispose")]
  public static extern void PassManagerBuilderDispose(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderSetOptLevel")]
  public static extern void PassManagerBuilderSetOptLevel(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderSetSizeLevel")]
  public static extern void PassManagerBuilderSetSizeLevel(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderSetDisableUnitAtATime")]
  public static extern void PassManagerBuilderSetDisableUnitAtATime(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderSetDisableUnrollLoops")]
  public static extern void PassManagerBuilderSetDisableUnrollLoops(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderSetDisableSimplifyLibCalls")]
  public static extern void PassManagerBuilderSetDisableSimplifyLibCalls(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderUseInlinerWithThreshold")]
  public static extern void PassManagerBuilderUseInlinerWithThreshold(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderPopulateFunctionPassManager")]
  public static extern void PassManagerBuilderPopulateFunctionPassManager(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderPopulateModulePassManager")]
  public static extern void PassManagerBuilderPopulateModulePassManager(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PassManagerBuilderPopulateLTOPassManager")]
  public static extern void PassManagerBuilderPopulateLTOPassManager(System.IntPtr jarg1, System.IntPtr jarg2, bool jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddAggressiveDCEPass")]
  public static extern void AddAggressiveDCEPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddCFGSimplificationPass")]
  public static extern void AddCFGSimplificationPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddDeadStoreEliminationPass")]
  public static extern void AddDeadStoreEliminationPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddScalarizerPass")]
  public static extern void AddScalarizerPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddGVNPass")]
  public static extern void AddGVNPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddIndVarSimplifyPass")]
  public static extern void AddIndVarSimplifyPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddInstructionCombiningPass")]
  public static extern void AddInstructionCombiningPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddJumpThreadingPass")]
  public static extern void AddJumpThreadingPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLICMPass")]
  public static extern void AddLICMPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLoopDeletionPass")]
  public static extern void AddLoopDeletionPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLoopIdiomPass")]
  public static extern void AddLoopIdiomPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLoopRotatePass")]
  public static extern void AddLoopRotatePass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLoopRerollPass")]
  public static extern void AddLoopRerollPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLoopUnrollPass")]
  public static extern void AddLoopUnrollPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLoopUnswitchPass")]
  public static extern void AddLoopUnswitchPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddMemCpyOptPass")]
  public static extern void AddMemCpyOptPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddPartiallyInlineLibCallsPass")]
  public static extern void AddPartiallyInlineLibCallsPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddPromoteMemoryToRegisterPass")]
  public static extern void AddPromoteMemoryToRegisterPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddReassociatePass")]
  public static extern void AddReassociatePass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddSCCPPass")]
  public static extern void AddSCCPPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddScalarReplAggregatesPass")]
  public static extern void AddScalarReplAggregatesPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddScalarReplAggregatesPassSSA")]
  public static extern void AddScalarReplAggregatesPassSSA(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddScalarReplAggregatesPassWithThreshold")]
  public static extern void AddScalarReplAggregatesPassWithThreshold(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddSimplifyLibCallsPass")]
  public static extern void AddSimplifyLibCallsPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddTailCallEliminationPass")]
  public static extern void AddTailCallEliminationPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddConstantPropagationPass")]
  public static extern void AddConstantPropagationPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddDemoteMemoryToRegisterPass")]
  public static extern void AddDemoteMemoryToRegisterPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddVerifierPass")]
  public static extern void AddVerifierPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddCorrelatedValuePropagationPass")]
  public static extern void AddCorrelatedValuePropagationPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddEarlyCSEPass")]
  public static extern void AddEarlyCSEPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLowerExpectIntrinsicPass")]
  public static extern void AddLowerExpectIntrinsicPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddTypeBasedAliasAnalysisPass")]
  public static extern void AddTypeBasedAliasAnalysisPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddBasicAliasAnalysisPass")]
  public static extern void AddBasicAliasAnalysisPass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddBBVectorizePass")]
  public static extern void AddBBVectorizePass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddLoopVectorizePass")]
  public static extern void AddLoopVectorizePass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddSLPVectorizePass")]
  public static extern void AddSLPVectorizePass(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeAllTargetInfos")]
  public static extern void InitializeAllTargetInfos();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeAllTargets")]
  public static extern void InitializeAllTargets();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeAllTargetMCs")]
  public static extern void InitializeAllTargetMCs();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeAllAsmPrinters")]
  public static extern void InitializeAllAsmPrinters();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeAllAsmParsers")]
  public static extern void InitializeAllAsmParsers();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeAllDisassemblers")]
  public static extern void InitializeAllDisassemblers();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeNativeTarget")]
  public static extern bool InitializeNativeTarget();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeNativeAsmParser")]
  public static extern bool InitializeNativeAsmParser();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeNativeAsmPrinter")]
  public static extern bool InitializeNativeAsmPrinter();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_InitializeNativeDisassembler")]
  public static extern bool InitializeNativeDisassembler();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateTargetData")]
  public static extern System.IntPtr CreateTargetData(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddTargetData")]
  public static extern void AddTargetData(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddTargetLibraryInfo")]
  public static extern void AddTargetLibraryInfo(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CopyStringRepOfTargetData")]
  public static extern string CopyStringRepOfTargetData(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ByteOrder")]
  public static extern int ByteOrder(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PointerSize")]
  public static extern uint PointerSize(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PointerSizeForAS")]
  public static extern uint PointerSizeForAS(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IntPtrType")]
  public static extern System.IntPtr IntPtrType(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IntPtrTypeForAS")]
  public static extern System.IntPtr IntPtrTypeForAS(System.IntPtr jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IntPtrTypeInContext")]
  public static extern System.IntPtr IntPtrTypeInContext(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IntPtrTypeForASInContext")]
  public static extern System.IntPtr IntPtrTypeForASInContext(System.IntPtr jarg1, System.IntPtr jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SizeOfTypeInBits")]
  public static extern ulong SizeOfTypeInBits(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_StoreSizeOfType")]
  public static extern ulong StoreSizeOfType(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ABISizeOfType")]
  public static extern ulong ABISizeOfType(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ABIAlignmentOfType")]
  public static extern uint ABIAlignmentOfType(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CallFrameAlignmentOfType")]
  public static extern uint CallFrameAlignmentOfType(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PreferredAlignmentOfType")]
  public static extern uint PreferredAlignmentOfType(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_PreferredAlignmentOfGlobal")]
  public static extern uint PreferredAlignmentOfGlobal(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ElementAtOffset")]
  public static extern uint ElementAtOffset(System.IntPtr jarg1, System.IntPtr jarg2, ulong jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_OffsetOfElement")]
  public static extern ulong OffsetOfElement(System.IntPtr jarg1, System.IntPtr jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DisposeTargetData")]
  public static extern void DisposeTargetData(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetFirstTarget")]
  public static extern System.IntPtr GetFirstTarget();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetNextTarget")]
  public static extern System.IntPtr GetNextTarget(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetFromName")]
  public static extern System.IntPtr GetTargetFromName(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetFromTriple")]
  public static extern bool GetTargetFromTriple(string jarg1, out System.IntPtr jarg2, out string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetName")]
  public static extern string GetTargetName(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetDescription")]
  public static extern string GetTargetDescription(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_TargetHasJIT")]
  public static extern bool TargetHasJIT(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_TargetHasTargetMachine")]
  public static extern bool TargetHasTargetMachine(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_TargetHasAsmBackend")]
  public static extern bool TargetHasAsmBackend(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_CreateTargetMachine")]
  public static extern System.IntPtr CreateTargetMachine(System.IntPtr jarg1, string jarg2, string jarg3, string jarg4, int jarg5, int jarg6, int jarg7);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_DisposeTargetMachine")]
  public static extern void DisposeTargetMachine(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetMachineTarget")]
  public static extern System.IntPtr GetTargetMachineTarget(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetMachineTriple")]
  public static extern string GetTargetMachineTriple(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetMachineCPU")]
  public static extern string GetTargetMachineCPU(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetMachineFeatureString")]
  public static extern string GetTargetMachineFeatureString(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetTargetMachineData")]
  public static extern System.IntPtr GetTargetMachineData(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_SetTargetMachineAsmVerbosity")]
  public static extern void SetTargetMachineAsmVerbosity(System.IntPtr jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_TargetMachineEmitToFile")]
  public static extern bool TargetMachineEmitToFile(System.IntPtr jarg1, System.IntPtr jarg2, string jarg3, int jarg4, out string jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_TargetMachineEmitToMemoryBuffer")]
  public static extern bool TargetMachineEmitToMemoryBuffer(System.IntPtr jarg1, System.IntPtr jarg2, int jarg3, out string jarg4, out System.IntPtr jarg5);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_GetDefaultTargetTriple")]
  public static extern string GetDefaultTargetTriple();

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_AddAnalysisPasses")]
  public static extern void AddAnalysisPasses(System.IntPtr jarg1, System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_VerifyModule")]
  public static extern bool VerifyModule(System.IntPtr jarg1, int jarg2, out string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_VerifyFunction")]
  public static extern bool VerifyFunction(System.IntPtr jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ViewFunctionCFG")]
  public static extern void ViewFunctionCFG(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_ViewFunctionCFGOnly")]
  public static extern void ViewFunctionCFGOnly(System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("SharpLLVM.Native.dll", EntryPoint="CSharp_IntrinsicGetDeclaration")]
  public static extern System.IntPtr IntrinsicGetDeclaration(System.IntPtr jarg1, uint jarg2, System.IntPtr arg3_data, uint jarg3);
}

}
