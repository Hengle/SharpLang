// Generated by llvm2cpp - DO NOT MODIFY!


Function* define_allocObject(Module *mod) {

// Type Definitions
std::vector<Type*>FuncTy_0_args;
FunctionType* FuncTy_0 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_0_args,
 /*isVarArg=*/false);


// Function Declarations

// Global Variable Declarations

// Constant Definitions
UndefValue* const_int32_1 = UndefValue::get(IntegerType::get(mod->getContext(), 32));

// Global Variable Definitions

Function* func_allocObject = mod->getFunction("allocObject");
if (!func_allocObject) {
func_allocObject = Function::Create(
 /*Type=*/FuncTy_0,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"allocObject", mod); 
func_allocObject->setCallingConv(CallingConv::C);
}
AttributeSet func_allocObject_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadNone);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_allocObject_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_allocObject->setAttributes(func_allocObject_PAL);

BasicBlock* label_2 = BasicBlock::Create(mod->getContext(), "",func_allocObject,0);

// Block  (label_2)
ReturnInst::Create(mod->getContext(), const_int32_1, label_2);
return func_allocObject;
}
