// Generated by llvm2cpp - DO NOT MODIFY!


Module* makeLLVMModuleContents(Module *mod) {

mod->setModuleIdentifier("Runtime.bc");

// Type Definitions
PointerType* PointerTy_0 = PointerType::get(IntegerType::get(mod->getContext(), 64), 0);

ArrayType* ArrayTy_1 = ArrayType::get(IntegerType::get(mod->getContext(), 32), 13);

PointerType* PointerTy_2 = PointerType::get(ArrayTy_1, 0);

std::vector<Type*>FuncTy_3_args;
StructType *StructTy_struct_RuntimeTypeInfo = mod->getTypeByName("struct.RuntimeTypeInfo");
if (!StructTy_struct_RuntimeTypeInfo) {
StructTy_struct_RuntimeTypeInfo = StructType::create(mod->getContext(), "struct.RuntimeTypeInfo");
}
std::vector<Type*>StructTy_struct_RuntimeTypeInfo_fields;
PointerType* PointerTy_4 = PointerType::get(StructTy_struct_RuntimeTypeInfo, 0);

StructTy_struct_RuntimeTypeInfo_fields.push_back(PointerTy_4);
StructTy_struct_RuntimeTypeInfo_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_RuntimeTypeInfo_fields.push_back(IntegerType::get(mod->getContext(), 32));
PointerType* PointerTy_5 = PointerType::get(PointerTy_4, 0);

StructTy_struct_RuntimeTypeInfo_fields.push_back(PointerTy_5);
StructTy_struct_RuntimeTypeInfo_fields.push_back(PointerTy_5);
PointerType* PointerTy_7 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);

ArrayType* ArrayTy_6 = ArrayType::get(PointerTy_7, 19);

StructTy_struct_RuntimeTypeInfo_fields.push_back(ArrayTy_6);
ArrayType* ArrayTy_8 = ArrayType::get(PointerTy_7, 0);

StructTy_struct_RuntimeTypeInfo_fields.push_back(ArrayTy_8);
if (StructTy_struct_RuntimeTypeInfo->isOpaque()) {
StructTy_struct_RuntimeTypeInfo->setBody(StructTy_struct_RuntimeTypeInfo_fields, /*isPacked=*/false);
}


FuncTy_3_args.push_back(PointerTy_4);
FuncTy_3_args.push_back(PointerTy_4);
FunctionType* FuncTy_3 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 1),
 /*Params=*/FuncTy_3_args,
 /*isVarArg=*/false);

PointerType* PointerTy_9 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);

PointerType* PointerTy_10 = PointerType::get(PointerTy_5, 0);

std::vector<Type*>FuncTy_11_args;
FuncTy_11_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_11 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_11_args,
 /*isVarArg=*/false);

PointerType* PointerTy_12 = PointerType::get(FuncTy_11, 0);

std::vector<Type*>FuncTy_14_args;
FuncTy_14_args.push_back(PointerTy_7);
FuncTy_14_args.push_back(IntegerType::get(mod->getContext(), 8));
FuncTy_14_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_14_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_14_args.push_back(IntegerType::get(mod->getContext(), 1));
FunctionType* FuncTy_14 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_14_args,
 /*isVarArg=*/false);

PointerType* PointerTy_13 = PointerType::get(FuncTy_14, 0);

std::vector<Type*>FuncTy_15_args;
FuncTy_15_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_15_args.push_back(PointerTy_7);
FunctionType* FuncTy_15 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_15_args,
 /*isVarArg=*/false);

StructType *StructTy_struct_IMTEntry = mod->getTypeByName("struct.IMTEntry");
if (!StructTy_struct_IMTEntry) {
StructTy_struct_IMTEntry = StructType::create(mod->getContext(), "struct.IMTEntry");
}
std::vector<Type*>StructTy_struct_IMTEntry_fields;
StructTy_struct_IMTEntry_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_IMTEntry_fields.push_back(PointerTy_7);
if (StructTy_struct_IMTEntry->isOpaque()) {
StructTy_struct_IMTEntry->setBody(StructTy_struct_IMTEntry_fields, /*isPacked=*/false);
}

PointerType* PointerTy_16 = PointerType::get(StructTy_struct_IMTEntry, 0);

PointerType* PointerTy_17 = PointerType::get(PointerTy_7, 0);

std::vector<Type*>FuncTy_18_args;
FuncTy_18_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_18 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_18_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_20_args;
FunctionType* FuncTy_20 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_20_args,
 /*isVarArg=*/false);

PointerType* PointerTy_19 = PointerType::get(FuncTy_20, 0);

std::vector<Type*>FuncTy_21_args;
FuncTy_21_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_21_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_21_args.push_back(IntegerType::get(mod->getContext(), 64));
StructType *StructTy_struct__Unwind_Exception = mod->getTypeByName("struct._Unwind_Exception");
if (!StructTy_struct__Unwind_Exception) {
StructTy_struct__Unwind_Exception = StructType::create(mod->getContext(), "struct._Unwind_Exception");
}
std::vector<Type*>StructTy_struct__Unwind_Exception_fields;
StructTy_struct__Unwind_Exception_fields.push_back(IntegerType::get(mod->getContext(), 64));
std::vector<Type*>FuncTy_24_args;
FuncTy_24_args.push_back(IntegerType::get(mod->getContext(), 32));
PointerType* PointerTy_22 = PointerType::get(StructTy_struct__Unwind_Exception, 0);

FuncTy_24_args.push_back(PointerTy_22);
FunctionType* FuncTy_24 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_24_args,
 /*isVarArg=*/false);

PointerType* PointerTy_23 = PointerType::get(FuncTy_24, 0);

StructTy_struct__Unwind_Exception_fields.push_back(PointerTy_23);
StructTy_struct__Unwind_Exception_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__Unwind_Exception_fields.push_back(IntegerType::get(mod->getContext(), 32));
ArrayType* ArrayTy_25 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 12);

StructTy_struct__Unwind_Exception_fields.push_back(ArrayTy_25);
if (StructTy_struct__Unwind_Exception->isOpaque()) {
StructTy_struct__Unwind_Exception->setBody(StructTy_struct__Unwind_Exception_fields, /*isPacked=*/false);
}


FuncTy_21_args.push_back(PointerTy_22);
StructType *StructTy_struct__Unwind_Context = mod->getTypeByName("struct._Unwind_Context");
if (!StructTy_struct__Unwind_Context) {
StructTy_struct__Unwind_Context = StructType::create(mod->getContext(), "struct._Unwind_Context");
}
std::vector<Type*>StructTy_struct__Unwind_Context_fields;
if (StructTy_struct__Unwind_Context->isOpaque()) {
StructTy_struct__Unwind_Context->setBody(StructTy_struct__Unwind_Context_fields, /*isPacked=*/false);
}

PointerType* PointerTy_26 = PointerType::get(StructTy_struct__Unwind_Context, 0);

FuncTy_21_args.push_back(PointerTy_26);
FunctionType* FuncTy_21 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_21_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_28_args;
FuncTy_28_args.push_back(PointerTy_26);
FunctionType* FuncTy_28 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_28_args,
 /*isVarArg=*/false);

PointerType* PointerTy_27 = PointerType::get(FuncTy_28, 0);

std::vector<Type*>FuncTy_30_args;
FuncTy_30_args.push_back(PointerTy_26);
FunctionType* FuncTy_30 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_30_args,
 /*isVarArg=*/false);

PointerType* PointerTy_29 = PointerType::get(FuncTy_30, 0);

std::vector<Type*>FuncTy_32_args;
FuncTy_32_args.push_back(PointerTy_17);
FuncTy_32_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_32 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_32_args,
 /*isVarArg=*/false);

PointerType* PointerTy_31 = PointerType::get(FuncTy_32, 0);

std::vector<Type*>FuncTy_34_args;
FuncTy_34_args.push_back(IntegerType::get(mod->getContext(), 64));
FuncTy_34_args.push_back(PointerTy_7);
FunctionType* FuncTy_34 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_34_args,
 /*isVarArg=*/false);

PointerType* PointerTy_33 = PointerType::get(FuncTy_34, 0);

std::vector<Type*>FuncTy_36_args;
FuncTy_36_args.push_back(PointerTy_26);
FuncTy_36_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_36_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_36 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_36_args,
 /*isVarArg=*/false);

PointerType* PointerTy_35 = PointerType::get(FuncTy_36, 0);

std::vector<Type*>FuncTy_38_args;
FuncTy_38_args.push_back(PointerTy_26);
FuncTy_38_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_38 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_38_args,
 /*isVarArg=*/false);

PointerType* PointerTy_37 = PointerType::get(FuncTy_38, 0);

std::vector<Type*>FuncTy_40_args;
FuncTy_40_args.push_back(PointerTy_7);
FunctionType* FuncTy_40 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_40_args,
 /*isVarArg=*/false);

PointerType* PointerTy_39 = PointerType::get(FuncTy_40, 0);

std::vector<Type*>FuncTy_41_args;
StructType *StructTy_struct_Object = mod->getTypeByName("struct.Object");
if (!StructTy_struct_Object) {
StructTy_struct_Object = StructType::create(mod->getContext(), "struct.Object");
}
std::vector<Type*>StructTy_struct_Object_fields;
StructTy_struct_Object_fields.push_back(PointerTy_4);
if (StructTy_struct_Object->isOpaque()) {
StructTy_struct_Object->setBody(StructTy_struct_Object_fields, /*isPacked=*/false);
}

PointerType* PointerTy_42 = PointerType::get(StructTy_struct_Object, 0);

FuncTy_41_args.push_back(PointerTy_42);
FunctionType* FuncTy_41 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_41_args,
 /*isVarArg=*/false);

PointerType* PointerTy_43 = PointerType::get(PointerTy_23, 0);

std::vector<Type*>FuncTy_45_args;
FuncTy_45_args.push_back(PointerTy_22);
FunctionType* FuncTy_45 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_45_args,
 /*isVarArg=*/false);

PointerType* PointerTy_44 = PointerType::get(FuncTy_45, 0);

PointerType* PointerTy_46 = PointerType::get(IntegerType::get(mod->getContext(), 16), 0);


// Function Declarations

Function* func_isInstInterface = mod->getFunction("isInstInterface");
if (!func_isInstInterface) {
func_isInstInterface = Function::Create(
 /*Type=*/FuncTy_3,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"isInstInterface", mod); 
func_isInstInterface->setCallingConv(CallingConv::C);
}
AttributeSet func_isInstInterface_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ZExt);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::ReadOnly);
  B.addAttribute(Attribute::NoCapture);
  PAS = AttributeSet::get(mod->getContext(), 1U, B);
 }

Attrs.push_back(PAS);
{
 AttrBuilder B;
 B.addAttribute(Attribute::ReadNone);
 PAS = AttributeSet::get(mod->getContext(), 2U, B);
}

Attrs.push_back(PAS);
{
 AttrBuilder B;
 B.addAttribute(Attribute::NoUnwind);
 B.addAttribute(Attribute::ReadOnly);
 PAS = AttributeSet::get(mod->getContext(), ~0U, B);
}

Attrs.push_back(PAS);
func_isInstInterface_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_isInstInterface->setAttributes(func_isInstInterface_PAL);

Function* func_allocObject = mod->getFunction("allocObject");
if (!func_allocObject) {
func_allocObject = Function::Create(
 /*Type=*/FuncTy_11,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"allocObject", mod); 
func_allocObject->setCallingConv(CallingConv::C);
}
AttributeSet func_allocObject_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoAlias);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_allocObject_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_allocObject->setAttributes(func_allocObject_PAL);

Function* func_malloc = mod->getFunction("malloc");
if (!func_malloc) {
func_malloc = Function::Create(
 /*Type=*/FuncTy_11,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"malloc", mod); // (external, no body)
func_malloc->setCallingConv(CallingConv::C);
}
AttributeSet func_malloc_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoAlias);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_malloc_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_malloc->setAttributes(func_malloc_PAL);

Function* func_llvm_memset_p0i8_i32 = mod->getFunction("llvm.memset.p0i8.i32");
if (!func_llvm_memset_p0i8_i32) {
func_llvm_memset_p0i8_i32 = Function::Create(
 /*Type=*/FuncTy_14,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.memset.p0i8.i32", mod); // (external, no body)
func_llvm_memset_p0i8_i32->setCallingConv(CallingConv::C);
}
AttributeSet func_llvm_memset_p0i8_i32_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_llvm_memset_p0i8_i32_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_llvm_memset_p0i8_i32->setAttributes(func_llvm_memset_p0i8_i32_PAL);

Function* func_resolveInterfaceCall = mod->getFunction("resolveInterfaceCall");
if (!func_resolveInterfaceCall) {
func_resolveInterfaceCall = Function::Create(
 /*Type=*/FuncTy_15,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"resolveInterfaceCall", mod); 
func_resolveInterfaceCall->setCallingConv(CallingConv::C);
}
AttributeSet func_resolveInterfaceCall_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadOnly);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_resolveInterfaceCall_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_resolveInterfaceCall->setAttributes(func_resolveInterfaceCall_PAL);

Function* func___getEncodingSize__YAIE_Z = mod->getFunction("\x01?getEncodingSize@@YAIE@Z");
if (!func___getEncodingSize__YAIE_Z) {
func___getEncodingSize__YAIE_Z = Function::Create(
 /*Type=*/FuncTy_18,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"\x01?getEncodingSize@@YAIE@Z", mod); 
func___getEncodingSize__YAIE_Z->setCallingConv(CallingConv::C);
}
AttributeSet func___getEncodingSize__YAIE_Z_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ZExt);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func___getEncodingSize__YAIE_Z_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func___getEncodingSize__YAIE_Z->setAttributes(func___getEncodingSize__YAIE_Z_PAL);

Function* func_abort = mod->getFunction("abort");
if (!func_abort) {
func_abort = Function::Create(
 /*Type=*/FuncTy_20,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"abort", mod); // (external, no body)
func_abort->setCallingConv(CallingConv::C);
}
AttributeSet func_abort_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoReturn);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_abort_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_abort->setAttributes(func_abort_PAL);

Function* func_sharpPersonality = mod->getFunction("sharpPersonality");
if (!func_sharpPersonality) {
func_sharpPersonality = Function::Create(
 /*Type=*/FuncTy_21,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"sharpPersonality", mod); 
func_sharpPersonality->setCallingConv(CallingConv::C);
}
AttributeSet func_sharpPersonality_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_sharpPersonality_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_sharpPersonality->setAttributes(func_sharpPersonality_PAL);

Function* func__Unwind_GetLanguageSpecificData = mod->getFunction("_Unwind_GetLanguageSpecificData");
if (!func__Unwind_GetLanguageSpecificData) {
func__Unwind_GetLanguageSpecificData = Function::Create(
 /*Type=*/FuncTy_28,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Unwind_GetLanguageSpecificData", mod); // (external, no body)
func__Unwind_GetLanguageSpecificData->setCallingConv(CallingConv::C);
}
AttributeSet func__Unwind_GetLanguageSpecificData_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__Unwind_GetLanguageSpecificData_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__Unwind_GetLanguageSpecificData->setAttributes(func__Unwind_GetLanguageSpecificData_PAL);

Function* func__Unwind_GetIP = mod->getFunction("_Unwind_GetIP");
if (!func__Unwind_GetIP) {
func__Unwind_GetIP = Function::Create(
 /*Type=*/FuncTy_30,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Unwind_GetIP", mod); // (external, no body)
func__Unwind_GetIP->setCallingConv(CallingConv::C);
}
AttributeSet func__Unwind_GetIP_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__Unwind_GetIP_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__Unwind_GetIP->setAttributes(func__Unwind_GetIP_PAL);

Function* func__Unwind_GetRegionStart = mod->getFunction("_Unwind_GetRegionStart");
if (!func__Unwind_GetRegionStart) {
func__Unwind_GetRegionStart = Function::Create(
 /*Type=*/FuncTy_30,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Unwind_GetRegionStart", mod); // (external, no body)
func__Unwind_GetRegionStart->setCallingConv(CallingConv::C);
}
AttributeSet func__Unwind_GetRegionStart_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__Unwind_GetRegionStart_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__Unwind_GetRegionStart->setAttributes(func__Unwind_GetRegionStart_PAL);

Function* func__Unwind_SetGR = mod->getFunction("_Unwind_SetGR");
if (!func__Unwind_SetGR) {
func__Unwind_SetGR = Function::Create(
 /*Type=*/FuncTy_36,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Unwind_SetGR", mod); // (external, no body)
func__Unwind_SetGR->setCallingConv(CallingConv::C);
}
AttributeSet func__Unwind_SetGR_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__Unwind_SetGR_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__Unwind_SetGR->setAttributes(func__Unwind_SetGR_PAL);

Function* func__Unwind_SetIP = mod->getFunction("_Unwind_SetIP");
if (!func__Unwind_SetIP) {
func__Unwind_SetIP = Function::Create(
 /*Type=*/FuncTy_38,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Unwind_SetIP", mod); // (external, no body)
func__Unwind_SetIP->setCallingConv(CallingConv::C);
}
AttributeSet func__Unwind_SetIP_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__Unwind_SetIP_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__Unwind_SetIP->setAttributes(func__Unwind_SetIP_PAL);

Function* func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z = mod->getFunction("\x01?cleanupException@@YAXW4_Unwind_Reason_Code@@PAU_Unwind_Exception@@@Z");
if (!func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z) {
func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z = Function::Create(
 /*Type=*/FuncTy_24,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"\x01?cleanupException@@YAXW4_Unwind_Reason_Code@@PAU_Unwind_Exception@@@Z", mod); 
func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z->setCallingConv(CallingConv::C);
}
AttributeSet func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z->setAttributes(func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z_PAL);

Function* func_free = mod->getFunction("free");
if (!func_free) {
func_free = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"free", mod); // (external, no body)
func_free->setCallingConv(CallingConv::C);
}
AttributeSet func_free_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_free_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_free->setAttributes(func_free_PAL);

Function* func_throwException = mod->getFunction("throwException");
if (!func_throwException) {
func_throwException = Function::Create(
 /*Type=*/FuncTy_41,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"throwException", mod); 
func_throwException->setCallingConv(CallingConv::C);
}
AttributeSet func_throwException_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ReadOnly);
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoReturn);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_throwException_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_throwException->setAttributes(func_throwException_PAL);

Function* func__Unwind_RaiseException = mod->getFunction("_Unwind_RaiseException");
if (!func__Unwind_RaiseException) {
func__Unwind_RaiseException = Function::Create(
 /*Type=*/FuncTy_45,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Unwind_RaiseException", mod); // (external, no body)
func__Unwind_RaiseException->setCallingConv(CallingConv::C);
}
AttributeSet func__Unwind_RaiseException_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__Unwind_RaiseException_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__Unwind_RaiseException->setAttributes(func__Unwind_RaiseException_PAL);

Function* func_llvm_lifetime_start = mod->getFunction("llvm.lifetime.start");
if (!func_llvm_lifetime_start) {
func_llvm_lifetime_start = Function::Create(
 /*Type=*/FuncTy_34,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.lifetime.start", mod); // (external, no body)
func_llvm_lifetime_start->setCallingConv(CallingConv::C);
}
AttributeSet func_llvm_lifetime_start_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_llvm_lifetime_start_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_llvm_lifetime_start->setAttributes(func_llvm_lifetime_start_PAL);

Function* func_llvm_lifetime_end = mod->getFunction("llvm.lifetime.end");
if (!func_llvm_lifetime_end) {
func_llvm_lifetime_end = Function::Create(
 /*Type=*/FuncTy_34,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.lifetime.end", mod); // (external, no body)
func_llvm_lifetime_end->setCallingConv(CallingConv::C);
}
AttributeSet func_llvm_lifetime_end_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 2U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_llvm_lifetime_end_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_llvm_lifetime_end->setAttributes(func_llvm_lifetime_end_PAL);

Function* func___readEncodedPointer__YAIPAPBEE_Z = mod->getFunction("\x01?readEncodedPointer@@YAIPAPBEE@Z");
if (!func___readEncodedPointer__YAIPAPBEE_Z) {
func___readEncodedPointer__YAIPAPBEE_Z = Function::Create(
 /*Type=*/FuncTy_32,
 /*Linkage=*/GlobalValue::InternalLinkage,
 /*Name=*/"\x01?readEncodedPointer@@YAIPAPBEE@Z", mod); 
func___readEncodedPointer__YAIPAPBEE_Z->setCallingConv(CallingConv::Fast);
}
AttributeSet func___readEncodedPointer__YAIPAPBEE_Z_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::ZExt);
  PAS = AttributeSet::get(mod->getContext(), 2U, B);
 }

Attrs.push_back(PAS);
{
 AttrBuilder B;
 PAS = AttributeSet::get(mod->getContext(), ~0U, B);
}

Attrs.push_back(PAS);
func___readEncodedPointer__YAIPAPBEE_Z_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func___readEncodedPointer__YAIPAPBEE_Z->setAttributes(func___readEncodedPointer__YAIPAPBEE_Z_PAL);

// Global Variable Declarations


GlobalVariable* gvar_int64___exceptionBaseFromUnwindOffset__3_JA = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/IntegerType::get(mod->getContext(), 64),
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"\x01?exceptionBaseFromUnwindOffset@@3_JA");
gvar_int64___exceptionBaseFromUnwindOffset__3_JA->setAlignment(8);

GlobalVariable* gvar_array_switch_table = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_1,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"switch.table");

// Constant Definitions
ConstantInt* const_int64_47 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("4294967280"), 10));
std::vector<Constant*> const_array_48_elems;
ConstantInt* const_int32_49 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("4"), 10));
const_array_48_elems.push_back(const_int32_49);
const_array_48_elems.push_back(const_int32_49);
ConstantInt* const_int32_50 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("2"), 10));
const_array_48_elems.push_back(const_int32_50);
const_array_48_elems.push_back(const_int32_49);
ConstantInt* const_int32_51 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("8"), 10));
const_array_48_elems.push_back(const_int32_51);
const_array_48_elems.push_back(const_int32_49);
const_array_48_elems.push_back(const_int32_49);
const_array_48_elems.push_back(const_int32_49);
const_array_48_elems.push_back(const_int32_49);
const_array_48_elems.push_back(const_int32_49);
const_array_48_elems.push_back(const_int32_50);
const_array_48_elems.push_back(const_int32_49);
const_array_48_elems.push_back(const_int32_51);
Constant* const_array_48 = ConstantArray::get(ArrayTy_1, const_array_48_elems);
ConstantInt* const_int32_52 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));
ConstantInt* const_int32_53 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
ConstantInt* const_int1_54 = ConstantInt::get(mod->getContext(), APInt(1, StringRef("0"), 10));
ConstantInt* const_int1_55 = ConstantInt::get(mod->getContext(), APInt(1, StringRef("-1"), 10));
ConstantInt* const_int8_56 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("0"), 10));
ConstantInt* const_int32_57 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("-2"), 10));
ConstantInt* const_int8_58 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("-1"), 10));
ConstantInt* const_int32_59 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("15"), 10));
ConstantInt* const_int32_60 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("13"), 10));
ConstantInt* const_int13_61 = ConstantInt::get(mod->getContext(), APInt(13, StringRef("-995"), 10));
ConstantInt* const_int13_62 = ConstantInt::get(mod->getContext(), APInt(13, StringRef("1"), 10));
ConstantInt* const_int13_63 = ConstantInt::get(mod->getContext(), APInt(13, StringRef("0"), 10));
ConstantInt* const_int32_64 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("-1"), 10));
ConstantInt* const_int32_65 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("127"), 10));
ConstantInt* const_int32_66 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("7"), 10));
ConstantInt* const_int32_67 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("128"), 10));
ConstantPointerNull* const_ptr_68 = ConstantPointerNull::get(PointerTy_7);
ConstantInt* const_int64_69 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("4"), 10));
ConstantInt* const_int32_70 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("12"), 10));
ConstantInt* const_int32_71 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("64"), 10));
ConstantInt* const_int32_72 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("32"), 10));
ConstantPointerNull* const_ptr_73 = ConstantPointerNull::get(PointerTy_4);
ConstantInt* const_int32_74 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("6"), 10));
ConstantPointerNull* const_ptr_75 = ConstantPointerNull::get(PointerTy_22);
ConstantInt* const_int32_76 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("48"), 10));
ConstantInt* const_int32_77 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("16"), 10));
ConstantInt* const_int64_78 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("0"), 10));
ConstantInt* const_int32_79 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("24"), 10));
ConstantInt* const_int32_80 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("9"), 10));
ConstantInt* const_int32_81 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("3"), 10));
ConstantInt* const_int32_82 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("10"), 10));
ConstantInt* const_int32_83 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("11"), 10));
ConstantInt* const_int32_84 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("112"), 10));

// Global Variable Definitions
gvar_int64___exceptionBaseFromUnwindOffset__3_JA->setInitializer(const_int64_47);
gvar_array_switch_table->setInitializer(const_array_48);

// Function Definitions

// Function: isInstInterface (func_isInstInterface)
{
 Function::arg_iterator args = func_isInstInterface->arg_begin();
 Value* ptr_runtimeTypeInfo = args++;
 ptr_runtimeTypeInfo->setName("runtimeTypeInfo");
 Value* ptr_expectedInterface = args++;
 ptr_expectedInterface->setName("expectedInterface");
 
 BasicBlock* label_85 = BasicBlock::Create(mod->getContext(), "",func_isInstInterface,0);
 BasicBlock* label__lr_ph = BasicBlock::Create(mod->getContext(), ".lr.ph",func_isInstInterface,0);
 BasicBlock* label_86 = BasicBlock::Create(mod->getContext(), "",func_isInstInterface,0);
 BasicBlock* label_87 = BasicBlock::Create(mod->getContext(), "",func_isInstInterface,0);
 BasicBlock* label___crit_edge_loopexit = BasicBlock::Create(mod->getContext(), "._crit_edge.loopexit",func_isInstInterface,0);
 BasicBlock* label___crit_edge = BasicBlock::Create(mod->getContext(), "._crit_edge",func_isInstInterface,0);
 
 // Block  (label_85)
 std::vector<Value*> ptr_88_indices;
 ptr_88_indices.push_back(const_int32_52);
 ptr_88_indices.push_back(const_int32_50);
 Instruction* ptr_88 = GetElementPtrInst::Create(ptr_runtimeTypeInfo, ptr_88_indices, "", label_85);
 LoadInst* int32_89 = new LoadInst(ptr_88, "", false, label_85);
 int32_89->setAlignment(4);
 ICmpInst* int1_90 = new ICmpInst(*label_85, ICmpInst::ICMP_EQ, int32_89, const_int32_52, "");
 BranchInst::Create(label___crit_edge, label__lr_ph, int1_90, label_85);
 
 // Block .lr.ph (label__lr_ph)
 std::vector<Value*> ptr_92_indices;
 ptr_92_indices.push_back(const_int32_52);
 ptr_92_indices.push_back(const_int32_49);
 Instruction* ptr_92 = GetElementPtrInst::Create(ptr_runtimeTypeInfo, ptr_92_indices, "", label__lr_ph);
 LoadInst* ptr_93 = new LoadInst(ptr_92, "", false, label__lr_ph);
 ptr_93->setAlignment(4);
 BranchInst::Create(label_86, label__lr_ph);
 
 // Block  (label_86)
 Argument* fwdref_95 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_i_02 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "i.02", label_86);
 int32_i_02->addIncoming(const_int32_52, label__lr_ph);
 int32_i_02->addIncoming(fwdref_95, label_87);
 
 Argument* fwdref_96 = new Argument(PointerTy_5);
 PHINode* ptr_currentInterface_01 = PHINode::Create(PointerTy_5, 2, "currentInterface.01", label_86);
 ptr_currentInterface_01->addIncoming(ptr_93, label__lr_ph);
 ptr_currentInterface_01->addIncoming(fwdref_96, label_87);
 
 LoadInst* ptr_97 = new LoadInst(ptr_currentInterface_01, "", false, label_86);
 ptr_97->setAlignment(4);
 ICmpInst* int1_98 = new ICmpInst(*label_86, ICmpInst::ICMP_EQ, ptr_97, ptr_expectedInterface, "");
 BranchInst::Create(label___crit_edge_loopexit, label_87, int1_98, label_86);
 
 // Block  (label_87)
 GetElementPtrInst* ptr_100 = GetElementPtrInst::Create(ptr_currentInterface_01, const_int32_53, "", label_87);
 BinaryOperator* int32_101 = BinaryOperator::Create(Instruction::Add, int32_i_02, const_int32_53, "", label_87);
 ICmpInst* int1_102 = new ICmpInst(*label_87, ICmpInst::ICMP_ULT, int32_101, int32_89, "");
 BranchInst::Create(label_86, label___crit_edge_loopexit, int1_102, label_87);
 
 // Block ._crit_edge.loopexit (label___crit_edge_loopexit)
 PHINode* int1__0_ph = PHINode::Create(IntegerType::get(mod->getContext(), 1), 2, ".0.ph", label___crit_edge_loopexit);
 int1__0_ph->addIncoming(const_int1_54, label_87);
 int1__0_ph->addIncoming(const_int1_55, label_86);
 
 BranchInst::Create(label___crit_edge, label___crit_edge_loopexit);
 
 // Block ._crit_edge (label___crit_edge)
 PHINode* int1__0 = PHINode::Create(IntegerType::get(mod->getContext(), 1), 2, ".0", label___crit_edge);
 int1__0->addIncoming(const_int1_54, label_85);
 int1__0->addIncoming(int1__0_ph, label___crit_edge_loopexit);
 
 ReturnInst::Create(mod->getContext(), int1__0, label___crit_edge);
 
 // Resolve Forward References
 fwdref_96->replaceAllUsesWith(ptr_100); delete fwdref_96;
 fwdref_95->replaceAllUsesWith(int32_101); delete fwdref_95;
 
}

// Function: allocObject (func_allocObject)
{
 Function::arg_iterator args = func_allocObject->arg_begin();
 Value* int32_size = args++;
 int32_size->setName("size");
 
 BasicBlock* label_106 = BasicBlock::Create(mod->getContext(), "",func_allocObject,0);
 
 // Block  (label_106)
 CallInst* ptr_107 = CallInst::Create(func_malloc, int32_size, "", label_106);
 ptr_107->setCallingConv(CallingConv::C);
 ptr_107->setTailCall(true);
 AttributeSet ptr_107_PAL;
 ptr_107->setAttributes(ptr_107_PAL);
 
 std::vector<Value*> void_108_params;
 void_108_params.push_back(ptr_107);
 void_108_params.push_back(const_int8_56);
 void_108_params.push_back(int32_size);
 void_108_params.push_back(const_int32_53);
 void_108_params.push_back(const_int1_54);
 CallInst* void_108 = CallInst::Create(func_llvm_memset_p0i8_i32, void_108_params, "", label_106);
 void_108->setCallingConv(CallingConv::C);
 void_108->setTailCall(true);
 AttributeSet void_108_PAL;
 void_108->setAttributes(void_108_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_107, label_106);
 
}

// Function: resolveInterfaceCall (func_resolveInterfaceCall)
{
 Function::arg_iterator args = func_resolveInterfaceCall->arg_begin();
 Value* int32_method = args++;
 int32_method->setName("method");
 Value* ptr_content = args++;
 ptr_content->setName("content");
 
 BasicBlock* label_110 = BasicBlock::Create(mod->getContext(), "",func_resolveInterfaceCall,0);
 BasicBlock* label_111 = BasicBlock::Create(mod->getContext(), "",func_resolveInterfaceCall,0);
 BasicBlock* label_112 = BasicBlock::Create(mod->getContext(), "",func_resolveInterfaceCall,0);
 BasicBlock* label_113 = BasicBlock::Create(mod->getContext(), "",func_resolveInterfaceCall,0);
 BasicBlock* label_114 = BasicBlock::Create(mod->getContext(), "",func_resolveInterfaceCall,0);
 
 // Block  (label_110)
 CastInst* int32_115 = new PtrToIntInst(ptr_content, IntegerType::get(mod->getContext(), 32), "", label_110);
 BinaryOperator* int32_116 = BinaryOperator::Create(Instruction::And, int32_115, const_int32_53, "", label_110);
 ICmpInst* int1_117 = new ICmpInst(*label_110, ICmpInst::ICMP_EQ, int32_116, const_int32_52, "");
 BranchInst::Create(label_114, label_111, int1_117, label_110);
 
 // Block  (label_111)
 BinaryOperator* int32_119 = BinaryOperator::Create(Instruction::And, int32_115, const_int32_57, "", label_111);
 CastInst* ptr_120 = new IntToPtrInst(int32_119, PointerTy_16, "", label_111);
 BranchInst::Create(label_112, label_111);
 
 // Block  (label_112)
 Argument* fwdref_122 = new Argument(PointerTy_16);
 PHINode* ptr_imtEntry_0 = PHINode::Create(PointerTy_16, 2, "imtEntry.0", label_112);
 ptr_imtEntry_0->addIncoming(ptr_120, label_111);
 ptr_imtEntry_0->addIncoming(fwdref_122, label_112);
 
 std::vector<Value*> ptr_123_indices;
 ptr_123_indices.push_back(const_int32_52);
 ptr_123_indices.push_back(const_int32_52);
 Instruction* ptr_123 = GetElementPtrInst::Create(ptr_imtEntry_0, ptr_123_indices, "", label_112);
 LoadInst* int32_124 = new LoadInst(ptr_123, "", false, label_112);
 int32_124->setAlignment(4);
 ICmpInst* int1_125 = new ICmpInst(*label_112, ICmpInst::ICMP_NE, int32_124, const_int32_52, "");
 ICmpInst* int1_not_ = new ICmpInst(*label_112, ICmpInst::ICMP_NE, int32_124, int32_method, "not.");
 BinaryOperator* int1__ = BinaryOperator::Create(Instruction::And, int1_125, int1_not_, ".", label_112);
 GetElementPtrInst* ptr_126 = GetElementPtrInst::Create(ptr_imtEntry_0, const_int32_53, "", label_112);
 BranchInst::Create(label_112, label_113, int1__, label_112);
 
 // Block  (label_113)
 PHINode* ptr_imtEntry_0_lcssa = PHINode::Create(PointerTy_16, 1, "imtEntry.0.lcssa", label_113);
 ptr_imtEntry_0_lcssa->addIncoming(ptr_imtEntry_0, label_112);
 
 std::vector<Value*> ptr_128_indices;
 ptr_128_indices.push_back(const_int32_52);
 ptr_128_indices.push_back(const_int32_53);
 Instruction* ptr_128 = GetElementPtrInst::Create(ptr_imtEntry_0_lcssa, ptr_128_indices, "", label_113);
 LoadInst* ptr_129 = new LoadInst(ptr_128, "", false, label_113);
 ptr_129->setAlignment(4);
 BranchInst::Create(label_114, label_113);
 
 // Block  (label_114)
 PHINode* ptr_result_0 = PHINode::Create(PointerTy_7, 2, "result.0", label_114);
 ptr_result_0->addIncoming(ptr_129, label_113);
 ptr_result_0->addIncoming(ptr_content, label_110);
 
 ReturnInst::Create(mod->getContext(), ptr_result_0, label_114);
 
 // Resolve Forward References
 fwdref_122->replaceAllUsesWith(ptr_126); delete fwdref_122;
 
}

// Function: ?getEncodingSize@@YAIE@Z (func___getEncodingSize__YAIE_Z)
{
 Function::arg_iterator args = func___getEncodingSize__YAIE_Z->arg_begin();
 Value* int8_Encoding = args++;
 int8_Encoding->setName("Encoding");
 
 BasicBlock* label_132 = BasicBlock::Create(mod->getContext(), "",func___getEncodingSize__YAIE_Z,0);
 BasicBlock* label_133 = BasicBlock::Create(mod->getContext(), "",func___getEncodingSize__YAIE_Z,0);
 BasicBlock* label_134 = BasicBlock::Create(mod->getContext(), "",func___getEncodingSize__YAIE_Z,0);
 BasicBlock* label_switch_hole_check = BasicBlock::Create(mod->getContext(), "switch.hole_check",func___getEncodingSize__YAIE_Z,0);
 BasicBlock* label_switch_lookup = BasicBlock::Create(mod->getContext(), "switch.lookup",func___getEncodingSize__YAIE_Z,0);
 BasicBlock* label_135 = BasicBlock::Create(mod->getContext(), "",func___getEncodingSize__YAIE_Z,0);
 
 // Block  (label_132)
 ICmpInst* int1_136 = new ICmpInst(*label_132, ICmpInst::ICMP_EQ, int8_Encoding, const_int8_58, "");
 BranchInst::Create(label_135, label_133, int1_136, label_132);
 
 // Block  (label_133)
 CastInst* int32_138 = new ZExtInst(int8_Encoding, IntegerType::get(mod->getContext(), 32), "", label_133);
 BinaryOperator* int32_139 = BinaryOperator::Create(Instruction::And, int32_138, const_int32_59, "", label_133);
 ICmpInst* int1_140 = new ICmpInst(*label_133, ICmpInst::ICMP_ULT, int32_139, const_int32_60, "");
 BranchInst::Create(label_switch_hole_check, label_134, int1_140, label_133);
 
 // Block  (label_134)
 CallInst* void_142 = CallInst::Create(func_abort, "", label_134);
 void_142->setCallingConv(CallingConv::C);
 void_142->setTailCall(true);
 AttributeSet void_142_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_142_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_142->setAttributes(void_142_PAL);
 
 new UnreachableInst(mod->getContext(), label_134);
 
 // Block switch.hole_check (label_switch_hole_check)
 CastInst* int13_switch_maskindex = new TruncInst(int32_139, IntegerType::get(mod->getContext(), 13), "switch.maskindex", label_switch_hole_check);
 BinaryOperator* int13_switch_shifted = BinaryOperator::Create(Instruction::LShr, const_int13_61, int13_switch_maskindex, "switch.shifted", label_switch_hole_check);
 BinaryOperator* int13_144 = BinaryOperator::Create(Instruction::And, int13_switch_shifted, const_int13_62, "", label_switch_hole_check);
 ICmpInst* int1_switch_lobit = new ICmpInst(*label_switch_hole_check, ICmpInst::ICMP_EQ, int13_144, const_int13_63, "switch.lobit");
 BranchInst::Create(label_134, label_switch_lookup, int1_switch_lobit, label_switch_hole_check);
 
 // Block switch.lookup (label_switch_lookup)
 std::vector<Value*> ptr_switch_gep_indices;
 ptr_switch_gep_indices.push_back(const_int32_52);
 ptr_switch_gep_indices.push_back(int32_139);
 Instruction* ptr_switch_gep = GetElementPtrInst::Create(gvar_array_switch_table, ptr_switch_gep_indices, "switch.gep", label_switch_lookup);
 LoadInst* int32_switch_load = new LoadInst(ptr_switch_gep, "switch.load", false, label_switch_lookup);
 int32_switch_load->setAlignment(4);
 ReturnInst::Create(mod->getContext(), int32_switch_load, label_switch_lookup);
 
 // Block  (label_135)
 ReturnInst::Create(mod->getContext(), const_int32_52, label_135);
 
}

// Function: sharpPersonality (func_sharpPersonality)
{
 Function::arg_iterator args = func_sharpPersonality->arg_begin();
 Value* int32_version = args++;
 int32_version->setName("version");
 Value* int32_actions = args++;
 int32_actions->setName("actions");
 Value* int64_exceptionClass = args++;
 int64_exceptionClass->setName("exceptionClass");
 Value* ptr_exceptionObject = args++;
 ptr_exceptionObject->setName("exceptionObject");
 Value* ptr_context = args++;
 ptr_context->setName("context");
 
 BasicBlock* label_148 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_149 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_150 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label__preheader_preheader = BasicBlock::Create(mod->getContext(), ".preheader.preheader",func_sharpPersonality,0);
 BasicBlock* label__preheader = BasicBlock::Create(mod->getContext(), ".preheader",func_sharpPersonality,0);
 BasicBlock* label___readULEB128__YAIPAPBE_Z_exit = BasicBlock::Create(mod->getContext(), "\x01?readULEB128@@YAIPAPBE@Z.exit",func_sharpPersonality,0);
 BasicBlock* label_151 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_152 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label___readULEB128__YAIPAPBE_Z_exit6 = BasicBlock::Create(mod->getContext(), "\x01?readULEB128@@YAIPAPBE@Z.exit6",func_sharpPersonality,0);
 BasicBlock* label__lr_ph_153 = BasicBlock::Create(mod->getContext(), ".lr.ph",func_sharpPersonality,0);
 BasicBlock* label_154 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_155 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label___readULEB128__YAIPAPBE_Z_exit10 = BasicBlock::Create(mod->getContext(), "\x01?readULEB128@@YAIPAPBE@Z.exit10",func_sharpPersonality,0);
 BasicBlock* label__backedge = BasicBlock::Create(mod->getContext(), ".backedge",func_sharpPersonality,0);
 BasicBlock* label_156 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_157 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_158 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label__split_us_i_preheader = BasicBlock::Create(mod->getContext(), ".split.us.i.preheader",func_sharpPersonality,0);
 BasicBlock* label___split_crit_edge_i_preheader = BasicBlock::Create(mod->getContext(), "..split_crit_edge.i.preheader",func_sharpPersonality,0);
 BasicBlock* label__split_us_i = BasicBlock::Create(mod->getContext(), ".split.us.i",func_sharpPersonality,0);
 BasicBlock* label__split_us_i_backedge = BasicBlock::Create(mod->getContext(), ".split.us.i.backedge",func_sharpPersonality,0);
 BasicBlock* label_159 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_160 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label___readSLEB128__YAIPAPBE_Z_exit_us_i = BasicBlock::Create(mod->getContext(), "\x01?readSLEB128@@YAIPAPBE@Z.exit.us.i",func_sharpPersonality,0);
 BasicBlock* label_161 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_162 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_163 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label___readSLEB128__YAIPAPBE_Z_exit6_us_i = BasicBlock::Create(mod->getContext(), "\x01?readSLEB128@@YAIPAPBE@Z.exit6.us.i",func_sharpPersonality,0);
 BasicBlock* label___getEncodingSize__YAIE_Z_exit_us_i = BasicBlock::Create(mod->getContext(), "\x01?getEncodingSize@@YAIE@Z.exit.us.i",func_sharpPersonality,0);
 BasicBlock* label__lr_ph_us_i_preheader = BasicBlock::Create(mod->getContext(), ".lr.ph.us.i.preheader",func_sharpPersonality,0);
 BasicBlock* label_164 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label__lr_ph_us_i = BasicBlock::Create(mod->getContext(), ".lr.ph.us.i",func_sharpPersonality,0);
 BasicBlock* label__loopexit_us_i_loopexit = BasicBlock::Create(mod->getContext(), ".loopexit.us.i.loopexit",func_sharpPersonality,0);
 BasicBlock* label__loopexit_us_i = BasicBlock::Create(mod->getContext(), ".loopexit.us.i",func_sharpPersonality,0);
 BasicBlock* label_165 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label___split_crit_edge_i = BasicBlock::Create(mod->getContext(), "..split_crit_edge.i",func_sharpPersonality,0);
 BasicBlock* label___split_crit_edge_i_backedge = BasicBlock::Create(mod->getContext(), "..split_crit_edge.i.backedge",func_sharpPersonality,0);
 BasicBlock* label_166 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_167 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label___readSLEB128__YAIPAPBE_Z_exit_i = BasicBlock::Create(mod->getContext(), "\x01?readSLEB128@@YAIPAPBE@Z.exit.i",func_sharpPersonality,0);
 BasicBlock* label_168 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_169 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_170 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label___readSLEB128__YAIPAPBE_Z_exit6_i = BasicBlock::Create(mod->getContext(), "\x01?readSLEB128@@YAIPAPBE@Z.exit6.i",func_sharpPersonality,0);
 BasicBlock* label_171 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label__us_lcssa_i = BasicBlock::Create(mod->getContext(), ".us-lcssa.i",func_sharpPersonality,0);
 BasicBlock* label___getEncodingSize__YAIE_Z_exit_i = BasicBlock::Create(mod->getContext(), "\x01?getEncodingSize@@YAIE@Z.exit.i",func_sharpPersonality,0);
 BasicBlock* label__lr_ph_i_preheader = BasicBlock::Create(mod->getContext(), ".lr.ph.i.preheader",func_sharpPersonality,0);
 BasicBlock* label_172 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label__lr_ph_i = BasicBlock::Create(mod->getContext(), ".lr.ph.i",func_sharpPersonality,0);
 BasicBlock* label__loopexit_i_loopexit = BasicBlock::Create(mod->getContext(), ".loopexit.i.loopexit",func_sharpPersonality,0);
 BasicBlock* label__loopexit_i = BasicBlock::Create(mod->getContext(), ".loopexit.i",func_sharpPersonality,0);
 BasicBlock* label_173 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit = BasicBlock::Create(mod->getContext(), "\x01?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit.loopexit",func_sharpPersonality,0);
 BasicBlock* label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit72 = BasicBlock::Create(mod->getContext(), "\x01?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit.loopexit72",func_sharpPersonality,0);
 BasicBlock* label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit73 = BasicBlock::Create(mod->getContext(), "\x01?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit.loopexit73",func_sharpPersonality,0);
 BasicBlock* label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit74 = BasicBlock::Create(mod->getContext(), "\x01?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit.loopexit74",func_sharpPersonality,0);
 BasicBlock* label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit = BasicBlock::Create(mod->getContext(), "\x01?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit",func_sharpPersonality,0);
 BasicBlock* label_174 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_175 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_176 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_177 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_178 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label_179 = BasicBlock::Create(mod->getContext(), "",func_sharpPersonality,0);
 BasicBlock* label__loopexit_loopexit = BasicBlock::Create(mod->getContext(), ".loopexit.loopexit",func_sharpPersonality,0);
 BasicBlock* label__loopexit = BasicBlock::Create(mod->getContext(), ".loopexit",func_sharpPersonality,0);
 
 // Block  (label_148)
 AllocaInst* ptr_EntryP_i = new AllocaInst(PointerTy_7, "EntryP.i", label_148);
 ptr_EntryP_i->setAlignment(4);
 AllocaInst* ptr_lsda = new AllocaInst(PointerTy_7, "lsda", label_148);
 ptr_lsda->setAlignment(4);
 AllocaInst* ptr_callSitePtr = new AllocaInst(PointerTy_7, "callSitePtr", label_148);
 ptr_callSitePtr->setAlignment(4);
 CallInst* ptr_180 = CallInst::Create(func__Unwind_GetLanguageSpecificData, ptr_context, "", label_148);
 ptr_180->setCallingConv(CallingConv::C);
 ptr_180->setTailCall(true);
 AttributeSet ptr_180_PAL;
 ptr_180->setAttributes(ptr_180_PAL);
 
 CallInst* int32_181 = CallInst::Create(func__Unwind_GetIP, ptr_context, "", label_148);
 int32_181->setCallingConv(CallingConv::C);
 int32_181->setTailCall(true);
 AttributeSet int32_181_PAL;
 int32_181->setAttributes(int32_181_PAL);
 
 BinaryOperator* int32_182 = BinaryOperator::Create(Instruction::Add, int32_181, const_int32_64, "", label_148);
 CallInst* int32_183 = CallInst::Create(func__Unwind_GetRegionStart, ptr_context, "", label_148);
 int32_183->setCallingConv(CallingConv::C);
 int32_183->setTailCall(true);
 AttributeSet int32_183_PAL;
 int32_183->setAttributes(int32_183_PAL);
 
 BinaryOperator* int32_184 = BinaryOperator::Create(Instruction::Sub, int32_182, int32_183, "", label_148);
 GetElementPtrInst* ptr_185 = GetElementPtrInst::Create(ptr_180, const_int32_53, "", label_148);
 StoreInst* void_186 = new StoreInst(ptr_185, ptr_lsda, false, label_148);
 void_186->setAlignment(4);
 LoadInst* int8_187 = new LoadInst(ptr_180, "", false, label_148);
 int8_187->setAlignment(1);
 ICmpInst* int1_188 = new ICmpInst(*label_148, ICmpInst::ICMP_EQ, int8_187, const_int8_58, "");
 BranchInst::Create(label_150, label_149, int1_188, label_148);
 
 // Block  (label_149)
 std::vector<Value*> int32_190_params;
 int32_190_params.push_back(ptr_lsda);
 int32_190_params.push_back(int8_187);
 CallInst* int32_190 = CallInst::Create(func___readEncodedPointer__YAIPAPBEE_Z, int32_190_params, "", label_149);
 int32_190->setCallingConv(CallingConv::Fast);
 int32_190->setTailCall(false);
 AttributeSet int32_190_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 2U, B);
   }
  
  Attrs.push_back(PAS);
  int32_190_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_190->setAttributes(int32_190_PAL);
 
 LoadInst* ptr__pre = new LoadInst(ptr_lsda, ".pre", false, label_149);
 ptr__pre->setAlignment(4);
 BranchInst::Create(label_150, label_149);
 
 // Block  (label_150)
 PHINode* ptr_192 = PHINode::Create(PointerTy_7, 2, "", label_150);
 ptr_192->addIncoming(ptr_185, label_148);
 ptr_192->addIncoming(ptr__pre, label_149);
 
 GetElementPtrInst* ptr_193 = GetElementPtrInst::Create(ptr_192, const_int32_53, "", label_150);
 StoreInst* void_194 = new StoreInst(ptr_193, ptr_lsda, false, label_150);
 void_194->setAlignment(4);
 LoadInst* int8_195 = new LoadInst(ptr_192, "", false, label_150);
 int8_195->setAlignment(1);
 ICmpInst* int1_196 = new ICmpInst(*label_150, ICmpInst::ICMP_EQ, int8_195, const_int8_58, "");
 BranchInst::Create(label_151, label__preheader_preheader, int1_196, label_150);
 
 // Block .preheader.preheader (label__preheader_preheader)
 BranchInst::Create(label__preheader, label__preheader_preheader);
 
 // Block .preheader (label__preheader)
 Argument* fwdref_199 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i", label__preheader);
 int32_shift_0_i->addIncoming(fwdref_199, label__preheader);
 int32_shift_0_i->addIncoming(const_int32_52, label__preheader_preheader);
 
 Argument* fwdref_200 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i", label__preheader);
 int32_result_0_i->addIncoming(fwdref_200, label__preheader);
 int32_result_0_i->addIncoming(const_int32_52, label__preheader_preheader);
 
 Argument* fwdref_202 = new Argument(PointerTy_7);
 PHINode* ptr_201 = PHINode::Create(PointerTy_7, 2, "", label__preheader);
 ptr_201->addIncoming(fwdref_202, label__preheader);
 ptr_201->addIncoming(ptr_192, label__preheader_preheader);
 
 Argument* fwdref_203 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i = PHINode::Create(PointerTy_7, 2, "p.0.i", label__preheader);
 ptr_p_0_i->addIncoming(fwdref_203, label__preheader);
 ptr_p_0_i->addIncoming(ptr_193, label__preheader_preheader);
 
 GetElementPtrInst* ptr_204 = GetElementPtrInst::Create(ptr_201, const_int32_50, "", label__preheader);
 LoadInst* int8_205 = new LoadInst(ptr_p_0_i, "", false, label__preheader);
 int8_205->setAlignment(1);
 CastInst* int32_206 = new ZExtInst(int8_205, IntegerType::get(mod->getContext(), 32), "", label__preheader);
 BinaryOperator* int32_207 = BinaryOperator::Create(Instruction::And, int32_206, const_int32_65, "", label__preheader);
 BinaryOperator* int32_208 = BinaryOperator::Create(Instruction::Shl, int32_207, int32_shift_0_i, "", label__preheader);
 BinaryOperator* int32_209 = BinaryOperator::Create(Instruction::Or, int32_208, int32_result_0_i, "", label__preheader);
 BinaryOperator* int32_210 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i, const_int32_66, "", label__preheader);
 BinaryOperator* int32_211 = BinaryOperator::Create(Instruction::And, int32_206, const_int32_67, "", label__preheader);
 ICmpInst* int1_212 = new ICmpInst(*label__preheader, ICmpInst::ICMP_EQ, int32_211, const_int32_52, "");
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit, label__preheader, int1_212, label__preheader);
 
 // Block ?readULEB128@@YAIPAPBE@Z.exit (label___readULEB128__YAIPAPBE_Z_exit)
 PHINode* int32__lcssa92 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa92", label___readULEB128__YAIPAPBE_Z_exit);
 int32__lcssa92->addIncoming(int32_209, label__preheader);
 
 PHINode* ptr__lcssa91 = PHINode::Create(PointerTy_7, 1, ".lcssa91", label___readULEB128__YAIPAPBE_Z_exit);
 ptr__lcssa91->addIncoming(ptr_204, label__preheader);
 
 PHINode* ptr__lcssa90 = PHINode::Create(PointerTy_7, 1, ".lcssa90", label___readULEB128__YAIPAPBE_Z_exit);
 ptr__lcssa90->addIncoming(ptr_201, label__preheader);
 
 StoreInst* void_214 = new StoreInst(ptr__lcssa91, ptr_lsda, false, label___readULEB128__YAIPAPBE_Z_exit);
 void_214->setAlignment(4);
 BinaryOperator* int32__sum = BinaryOperator::Create(Instruction::Add, int32__lcssa92, const_int32_50, ".sum", label___readULEB128__YAIPAPBE_Z_exit);
 GetElementPtrInst* ptr_215 = GetElementPtrInst::Create(ptr__lcssa90, int32__sum, "", label___readULEB128__YAIPAPBE_Z_exit);
 BranchInst::Create(label_151, label___readULEB128__YAIPAPBE_Z_exit);
 
 // Block  (label_151)
 PHINode* ptr_217 = PHINode::Create(PointerTy_7, 2, "", label_151);
 ptr_217->addIncoming(ptr__lcssa91, label___readULEB128__YAIPAPBE_Z_exit);
 ptr_217->addIncoming(ptr_193, label_150);
 
 PHINode* ptr_classInfo_0 = PHINode::Create(PointerTy_7, 2, "classInfo.0", label_151);
 ptr_classInfo_0->addIncoming(ptr_215, label___readULEB128__YAIPAPBE_Z_exit);
 ptr_classInfo_0->addIncoming(const_ptr_68, label_150);
 
 GetElementPtrInst* ptr_218 = GetElementPtrInst::Create(ptr_217, const_int32_53, "", label_151);
 StoreInst* void_219 = new StoreInst(ptr_218, ptr_lsda, false, label_151);
 void_219->setAlignment(4);
 LoadInst* int8_220 = new LoadInst(ptr_217, "", false, label_151);
 int8_220->setAlignment(1);
 BranchInst::Create(label_152, label_151);
 
 // Block  (label_152)
 Argument* fwdref_222 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i3 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i3", label_152);
 int32_shift_0_i3->addIncoming(const_int32_52, label_151);
 int32_shift_0_i3->addIncoming(fwdref_222, label_152);
 
 Argument* fwdref_223 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i4 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i4", label_152);
 int32_result_0_i4->addIncoming(const_int32_52, label_151);
 int32_result_0_i4->addIncoming(fwdref_223, label_152);
 
 Argument* fwdref_225 = new Argument(PointerTy_7);
 PHINode* ptr_224 = PHINode::Create(PointerTy_7, 2, "", label_152);
 ptr_224->addIncoming(ptr_217, label_151);
 ptr_224->addIncoming(fwdref_225, label_152);
 
 Argument* fwdref_226 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i5 = PHINode::Create(PointerTy_7, 2, "p.0.i5", label_152);
 ptr_p_0_i5->addIncoming(ptr_218, label_151);
 ptr_p_0_i5->addIncoming(fwdref_226, label_152);
 
 GetElementPtrInst* ptr_227 = GetElementPtrInst::Create(ptr_224, const_int32_50, "", label_152);
 LoadInst* int8_228 = new LoadInst(ptr_p_0_i5, "", false, label_152);
 int8_228->setAlignment(1);
 CastInst* int32_229 = new ZExtInst(int8_228, IntegerType::get(mod->getContext(), 32), "", label_152);
 BinaryOperator* int32_230 = BinaryOperator::Create(Instruction::And, int32_229, const_int32_65, "", label_152);
 BinaryOperator* int32_231 = BinaryOperator::Create(Instruction::Shl, int32_230, int32_shift_0_i3, "", label_152);
 BinaryOperator* int32_232 = BinaryOperator::Create(Instruction::Or, int32_231, int32_result_0_i4, "", label_152);
 BinaryOperator* int32_233 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i3, const_int32_66, "", label_152);
 BinaryOperator* int32_234 = BinaryOperator::Create(Instruction::And, int32_229, const_int32_67, "", label_152);
 ICmpInst* int1_235 = new ICmpInst(*label_152, ICmpInst::ICMP_EQ, int32_234, const_int32_52, "");
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit6, label_152, int1_235, label_152);
 
 // Block ?readULEB128@@YAIPAPBE@Z.exit6 (label___readULEB128__YAIPAPBE_Z_exit6)
 PHINode* int32__lcssa89 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa89", label___readULEB128__YAIPAPBE_Z_exit6);
 int32__lcssa89->addIncoming(int32_232, label_152);
 
 PHINode* ptr__lcssa88 = PHINode::Create(PointerTy_7, 1, ".lcssa88", label___readULEB128__YAIPAPBE_Z_exit6);
 ptr__lcssa88->addIncoming(ptr_227, label_152);
 
 PHINode* ptr__lcssa87 = PHINode::Create(PointerTy_7, 1, ".lcssa87", label___readULEB128__YAIPAPBE_Z_exit6);
 ptr__lcssa87->addIncoming(ptr_224, label_152);
 
 StoreInst* void_237 = new StoreInst(ptr__lcssa88, ptr_lsda, false, label___readULEB128__YAIPAPBE_Z_exit6);
 void_237->setAlignment(4);
 BinaryOperator* int32__sum11 = BinaryOperator::Create(Instruction::Add, int32__lcssa89, const_int32_50, ".sum11", label___readULEB128__YAIPAPBE_Z_exit6);
 GetElementPtrInst* ptr_238 = GetElementPtrInst::Create(ptr__lcssa87, int32__sum11, "", label___readULEB128__YAIPAPBE_Z_exit6);
 StoreInst* void_239 = new StoreInst(ptr__lcssa88, ptr_callSitePtr, false, label___readULEB128__YAIPAPBE_Z_exit6);
 void_239->setAlignment(4);
 ICmpInst* int1_240 = new ICmpInst(*label___readULEB128__YAIPAPBE_Z_exit6, ICmpInst::ICMP_SGT, int32__sum11, const_int32_50, "");
 BranchInst::Create(label__lr_ph_153, label__loopexit, int1_240, label___readULEB128__YAIPAPBE_Z_exit6);
 
 // Block .lr.ph (label__lr_ph_153)
 CastInst* int32_242 = new PtrToIntInst(ptr_238, IntegerType::get(mod->getContext(), 32), "", label__lr_ph_153);
 BinaryOperator* int32_243 = BinaryOperator::Create(Instruction::Add, int32_242, const_int32_64, "", label__lr_ph_153);
 BranchInst::Create(label_154, label__lr_ph_153);
 
 // Block  (label_154)
 std::vector<Value*> int32_245_params;
 int32_245_params.push_back(ptr_callSitePtr);
 int32_245_params.push_back(int8_220);
 CallInst* int32_245 = CallInst::Create(func___readEncodedPointer__YAIPAPBEE_Z, int32_245_params, "", label_154);
 int32_245->setCallingConv(CallingConv::Fast);
 int32_245->setTailCall(false);
 AttributeSet int32_245_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 2U, B);
   }
  
  Attrs.push_back(PAS);
  int32_245_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_245->setAttributes(int32_245_PAL);
 
 std::vector<Value*> int32_246_params;
 int32_246_params.push_back(ptr_callSitePtr);
 int32_246_params.push_back(int8_220);
 CallInst* int32_246 = CallInst::Create(func___readEncodedPointer__YAIPAPBEE_Z, int32_246_params, "", label_154);
 int32_246->setCallingConv(CallingConv::Fast);
 int32_246->setTailCall(false);
 AttributeSet int32_246_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 2U, B);
   }
  
  Attrs.push_back(PAS);
  int32_246_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_246->setAttributes(int32_246_PAL);
 
 std::vector<Value*> int32_247_params;
 int32_247_params.push_back(ptr_callSitePtr);
 int32_247_params.push_back(int8_220);
 CallInst* int32_247 = CallInst::Create(func___readEncodedPointer__YAIPAPBEE_Z, int32_247_params, "", label_154);
 int32_247->setCallingConv(CallingConv::Fast);
 int32_247->setTailCall(false);
 AttributeSet int32_247_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 2U, B);
   }
  
  Attrs.push_back(PAS);
  int32_247_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_247->setAttributes(int32_247_PAL);
 
 LoadInst* ptr_248 = new LoadInst(ptr_callSitePtr, "", false, label_154);
 ptr_248->setAlignment(4);
 BranchInst::Create(label_155, label_154);
 
 // Block  (label_155)
 Argument* fwdref_250 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i7 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i7", label_155);
 int32_shift_0_i7->addIncoming(const_int32_52, label_154);
 int32_shift_0_i7->addIncoming(fwdref_250, label_155);
 
 Argument* fwdref_251 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i8 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i8", label_155);
 int32_result_0_i8->addIncoming(const_int32_52, label_154);
 int32_result_0_i8->addIncoming(fwdref_251, label_155);
 
 Argument* fwdref_252 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i9 = PHINode::Create(PointerTy_7, 2, "p.0.i9", label_155);
 ptr_p_0_i9->addIncoming(ptr_248, label_154);
 ptr_p_0_i9->addIncoming(fwdref_252, label_155);
 
 GetElementPtrInst* ptr_253 = GetElementPtrInst::Create(ptr_p_0_i9, const_int32_53, "", label_155);
 LoadInst* int8_254 = new LoadInst(ptr_p_0_i9, "", false, label_155);
 int8_254->setAlignment(1);
 CastInst* int32_255 = new ZExtInst(int8_254, IntegerType::get(mod->getContext(), 32), "", label_155);
 BinaryOperator* int32_256 = BinaryOperator::Create(Instruction::And, int32_255, const_int32_65, "", label_155);
 BinaryOperator* int32_257 = BinaryOperator::Create(Instruction::Shl, int32_256, int32_shift_0_i7, "", label_155);
 BinaryOperator* int32_258 = BinaryOperator::Create(Instruction::Or, int32_257, int32_result_0_i8, "", label_155);
 BinaryOperator* int32_259 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i7, const_int32_66, "", label_155);
 BinaryOperator* int32_260 = BinaryOperator::Create(Instruction::And, int32_255, const_int32_67, "", label_155);
 ICmpInst* int1_261 = new ICmpInst(*label_155, ICmpInst::ICMP_EQ, int32_260, const_int32_52, "");
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit10, label_155, int1_261, label_155);
 
 // Block ?readULEB128@@YAIPAPBE@Z.exit10 (label___readULEB128__YAIPAPBE_Z_exit10)
 PHINode* int32__lcssa84 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa84", label___readULEB128__YAIPAPBE_Z_exit10);
 int32__lcssa84->addIncoming(int32_258, label_155);
 
 PHINode* ptr__lcssa83 = PHINode::Create(PointerTy_7, 1, ".lcssa83", label___readULEB128__YAIPAPBE_Z_exit10);
 ptr__lcssa83->addIncoming(ptr_253, label_155);
 
 StoreInst* void_263 = new StoreInst(ptr__lcssa83, ptr_callSitePtr, false, label___readULEB128__YAIPAPBE_Z_exit10);
 void_263->setAlignment(4);
 ICmpInst* int1_264 = new ICmpInst(*label___readULEB128__YAIPAPBE_Z_exit10, ICmpInst::ICMP_EQ, int32_247, const_int32_52, "");
 BranchInst::Create(label__backedge, label_156, int1_264, label___readULEB128__YAIPAPBE_Z_exit10);
 
 // Block .backedge (label__backedge)
 ICmpInst* int1_266 = new ICmpInst(*label__backedge, ICmpInst::ICMP_ULT, ptr__lcssa83, ptr_238, "");
 BranchInst::Create(label_154, label__loopexit_loopexit, int1_266, label__backedge);
 
 // Block  (label_156)
 ICmpInst* int1_268 = new ICmpInst(*label_156, ICmpInst::ICMP_EQ, int32__lcssa84, const_int32_52, "");
 BinaryOperator* int32_269 = BinaryOperator::Create(Instruction::Add, int32_243, int32__lcssa84, "", label_156);
 SelectInst* int32__50 = SelectInst::Create(int1_268, const_int32_52, int32_269, ".50", label_156);
 ICmpInst* int1_270 = new ICmpInst(*label_156, ICmpInst::ICMP_ULE, int32_245, int32_184, "");
 BinaryOperator* int32_271 = BinaryOperator::Create(Instruction::Add, int32_246, int32_245, "", label_156);
 ICmpInst* int1_272 = new ICmpInst(*label_156, ICmpInst::ICMP_ULT, int32_184, int32_271, "");
 BinaryOperator* int1_or_cond = BinaryOperator::Create(Instruction::And, int1_270, int1_272, "or.cond", label_156);
 BranchInst::Create(label_157, label__backedge, int1_or_cond, label_156);
 
 // Block  (label_157)
 PHINode* int32__50_lcssa = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".50.lcssa", label_157);
 int32__50_lcssa->addIncoming(int32__50, label_156);
 
 PHINode* int32__lcssa85 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa85", label_157);
 int32__lcssa85->addIncoming(int32_247, label_156);
 
 ICmpInst* int1_274 = new ICmpInst(*label_157, ICmpInst::ICMP_NE, int32__50_lcssa, const_int32_52, "");
 BranchInst::Create(label_158, label_174, int1_274, label_157);
 
 // Block  (label_158)
 CastInst* ptr_276 = new BitCastInst(ptr_EntryP_i, PointerTy_7, "", label_158);
 std::vector<Value*> void_277_params;
 void_277_params.push_back(const_int64_69);
 void_277_params.push_back(ptr_276);
 CallInst* void_277 = CallInst::Create(func_llvm_lifetime_start, void_277_params, "", label_158);
 void_277->setCallingConv(CallingConv::C);
 void_277->setTailCall(false);
 AttributeSet void_277_PAL;
 void_277->setAttributes(void_277_PAL);
 
 CastInst* ptr_278 = new IntToPtrInst(int32__50_lcssa, PointerTy_7, "", label_158);
 CastInst* ptr_279 = new BitCastInst(ptr_exceptionObject, PointerTy_7, "", label_158);
 CastInst* int32_280 = new ZExtInst(int8_195, IntegerType::get(mod->getContext(), 32), "", label_158);
 BinaryOperator* int32_281 = BinaryOperator::Create(Instruction::And, int32_280, const_int32_59, "", label_158);
 std::vector<Value*> ptr_switch_gep_i_i_indices;
 ptr_switch_gep_i_i_indices.push_back(const_int32_52);
 ptr_switch_gep_i_i_indices.push_back(int32_281);
 Instruction* ptr_switch_gep_i_i = GetElementPtrInst::Create(gvar_array_switch_table, ptr_switch_gep_i_i_indices, "switch.gep.i.i", label_158);
 BranchInst::Create(label__split_us_i_preheader, label___split_crit_edge_i_preheader, int1_196, label_158);
 
 // Block .split.us.i.preheader (label__split_us_i_preheader)
 BranchInst::Create(label__split_us_i, label__split_us_i_preheader);
 
 // Block ..split_crit_edge.i.preheader (label___split_crit_edge_i_preheader)
 CastInst* int13_switch_maskindex_i_i = new TruncInst(int32_281, IntegerType::get(mod->getContext(), 13), "switch.maskindex.i.i", label___split_crit_edge_i_preheader);
 BinaryOperator* int13_switch_shifted_i_i = BinaryOperator::Create(Instruction::LShr, const_int13_61, int13_switch_maskindex_i_i, "switch.shifted.i.i", label___split_crit_edge_i_preheader);
 BinaryOperator* int13_284 = BinaryOperator::Create(Instruction::And, int13_switch_shifted_i_i, const_int13_62, "", label___split_crit_edge_i_preheader);
 ICmpInst* int1_switch_lobit_i_i = new ICmpInst(*label___split_crit_edge_i_preheader, ICmpInst::ICMP_EQ, int13_284, const_int13_63, "switch.lobit.i.i");
 ICmpInst* int1__not_i = new ICmpInst(*label___split_crit_edge_i_preheader, ICmpInst::ICMP_UGT, int32_281, const_int32_70, ".not.i");
 BinaryOperator* int1_brmerge_i = BinaryOperator::Create(Instruction::Or, int1__not_i, int1_switch_lobit_i_i, "brmerge.i", label___split_crit_edge_i_preheader);
 BranchInst::Create(label___split_crit_edge_i, label___split_crit_edge_i_preheader);
 
 // Block .split.us.i (label__split_us_i)
 Argument* fwdref_286 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i_us_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i.us.i", label__split_us_i);
 int32_shift_0_i_us_i->addIncoming(const_int32_52, label__split_us_i_preheader);
 int32_shift_0_i_us_i->addIncoming(fwdref_286, label__split_us_i_backedge);
 
 Argument* fwdref_287 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i_us_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i.us.i", label__split_us_i);
 int32_result_0_i_us_i->addIncoming(const_int32_52, label__split_us_i_preheader);
 int32_result_0_i_us_i->addIncoming(fwdref_287, label__split_us_i_backedge);
 
 Argument* fwdref_288 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i_us_i = PHINode::Create(PointerTy_7, 2, "p.0.i.us.i", label__split_us_i);
 ptr_p_0_i_us_i->addIncoming(ptr_278, label__split_us_i_preheader);
 ptr_p_0_i_us_i->addIncoming(fwdref_288, label__split_us_i_backedge);
 
 GetElementPtrInst* ptr_289 = GetElementPtrInst::Create(ptr_p_0_i_us_i, const_int32_53, "", label__split_us_i);
 LoadInst* int8_290 = new LoadInst(ptr_p_0_i_us_i, "", false, label__split_us_i);
 int8_290->setAlignment(1);
 CastInst* int32_291 = new ZExtInst(int8_290, IntegerType::get(mod->getContext(), 32), "", label__split_us_i);
 BinaryOperator* int32_292 = BinaryOperator::Create(Instruction::And, int32_291, const_int32_65, "", label__split_us_i);
 BinaryOperator* int32_293 = BinaryOperator::Create(Instruction::Shl, int32_292, int32_shift_0_i_us_i, "", label__split_us_i);
 BinaryOperator* int32_294 = BinaryOperator::Create(Instruction::Or, int32_293, int32_result_0_i_us_i, "", label__split_us_i);
 BinaryOperator* int32_295 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i_us_i, const_int32_66, "", label__split_us_i);
 BinaryOperator* int32_296 = BinaryOperator::Create(Instruction::And, int32_291, const_int32_67, "", label__split_us_i);
 ICmpInst* int1_297 = new ICmpInst(*label__split_us_i, ICmpInst::ICMP_EQ, int32_296, const_int32_52, "");
 BranchInst::Create(label_159, label__split_us_i_backedge, int1_297, label__split_us_i);
 
 // Block .split.us.i.backedge (label__split_us_i_backedge)
 PHINode* int32_shift_0_i_us_i_be = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i.us.i.be", label__split_us_i_backedge);
 int32_shift_0_i_us_i_be->addIncoming(int32_295, label__split_us_i);
 int32_shift_0_i_us_i_be->addIncoming(const_int32_52, label_165);
 
 PHINode* int32_result_0_i_us_i_be = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i.us.i.be", label__split_us_i_backedge);
 int32_result_0_i_us_i_be->addIncoming(int32_294, label__split_us_i);
 int32_result_0_i_us_i_be->addIncoming(const_int32_52, label_165);
 
 Argument* fwdref_299 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i_us_i_be = PHINode::Create(PointerTy_7, 2, "p.0.i.us.i.be", label__split_us_i_backedge);
 ptr_p_0_i_us_i_be->addIncoming(ptr_289, label__split_us_i);
 ptr_p_0_i_us_i_be->addIncoming(fwdref_299, label_165);
 
 BranchInst::Create(label__split_us_i, label__split_us_i_backedge);
 
 // Block  (label_159)
 BinaryOperator* int32_301 = BinaryOperator::Create(Instruction::And, int32_291, const_int32_71, "", label_159);
 ICmpInst* int1_302 = new ICmpInst(*label_159, ICmpInst::ICMP_NE, int32_301, const_int32_52, "");
 ICmpInst* int1_303 = new ICmpInst(*label_159, ICmpInst::ICMP_ULT, int32_295, const_int32_72, "");
 BinaryOperator* int1_or_cond_i_us_i = BinaryOperator::Create(Instruction::And, int1_302, int1_303, "or.cond.i.us.i", label_159);
 BranchInst::Create(label_160, label___readSLEB128__YAIPAPBE_Z_exit_us_i, int1_or_cond_i_us_i, label_159);
 
 // Block  (label_160)
 BinaryOperator* int32_305 = BinaryOperator::Create(Instruction::Shl, const_int32_64, int32_295, "", label_160);
 BinaryOperator* int32_306 = BinaryOperator::Create(Instruction::Or, int32_294, int32_305, "", label_160);
 BranchInst::Create(label___readSLEB128__YAIPAPBE_Z_exit_us_i, label_160);
 
 // Block ?readSLEB128@@YAIPAPBE@Z.exit.us.i (label___readSLEB128__YAIPAPBE_Z_exit_us_i)
 PHINode* int32_result_1_i_us_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.1.i.us.i", label___readSLEB128__YAIPAPBE_Z_exit_us_i);
 int32_result_1_i_us_i->addIncoming(int32_306, label_160);
 int32_result_1_i_us_i->addIncoming(int32_294, label_159);
 
 BranchInst::Create(label_161, label___readSLEB128__YAIPAPBE_Z_exit_us_i);
 
 // Block  (label_161)
 Argument* fwdref_309 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i1_us_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i1.us.i", label_161);
 int32_shift_0_i1_us_i->addIncoming(const_int32_52, label___readSLEB128__YAIPAPBE_Z_exit_us_i);
 int32_shift_0_i1_us_i->addIncoming(fwdref_309, label_161);
 
 Argument* fwdref_310 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i2_us_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i2.us.i", label_161);
 int32_result_0_i2_us_i->addIncoming(const_int32_52, label___readSLEB128__YAIPAPBE_Z_exit_us_i);
 int32_result_0_i2_us_i->addIncoming(fwdref_310, label_161);
 
 Argument* fwdref_312 = new Argument(PointerTy_7);
 PHINode* ptr_311 = PHINode::Create(PointerTy_7, 2, "", label_161);
 ptr_311->addIncoming(ptr_p_0_i_us_i, label___readSLEB128__YAIPAPBE_Z_exit_us_i);
 ptr_311->addIncoming(fwdref_312, label_161);
 
 Argument* fwdref_313 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i3_us_i = PHINode::Create(PointerTy_7, 2, "p.0.i3.us.i", label_161);
 ptr_p_0_i3_us_i->addIncoming(ptr_289, label___readSLEB128__YAIPAPBE_Z_exit_us_i);
 ptr_p_0_i3_us_i->addIncoming(fwdref_313, label_161);
 
 GetElementPtrInst* ptr_314 = GetElementPtrInst::Create(ptr_311, const_int32_50, "", label_161);
 LoadInst* int8_315 = new LoadInst(ptr_p_0_i3_us_i, "", false, label_161);
 int8_315->setAlignment(1);
 CastInst* int32_316 = new ZExtInst(int8_315, IntegerType::get(mod->getContext(), 32), "", label_161);
 BinaryOperator* int32_317 = BinaryOperator::Create(Instruction::And, int32_316, const_int32_65, "", label_161);
 BinaryOperator* int32_318 = BinaryOperator::Create(Instruction::Shl, int32_317, int32_shift_0_i1_us_i, "", label_161);
 BinaryOperator* int32_319 = BinaryOperator::Create(Instruction::Or, int32_318, int32_result_0_i2_us_i, "", label_161);
 BinaryOperator* int32_320 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i1_us_i, const_int32_66, "", label_161);
 BinaryOperator* int32_321 = BinaryOperator::Create(Instruction::And, int32_316, const_int32_67, "", label_161);
 ICmpInst* int1_322 = new ICmpInst(*label_161, ICmpInst::ICMP_EQ, int32_321, const_int32_52, "");
 BranchInst::Create(label_162, label_161, int1_322, label_161);
 
 // Block  (label_162)
 PHINode* int32__lcssa76 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa76", label_162);
 int32__lcssa76->addIncoming(int32_320, label_161);
 
 PHINode* int32__lcssa75 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa75", label_162);
 int32__lcssa75->addIncoming(int32_319, label_161);
 
 PHINode* int32__lcssa = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa", label_162);
 int32__lcssa->addIncoming(int32_316, label_161);
 
 BinaryOperator* int32_324 = BinaryOperator::Create(Instruction::And, int32__lcssa, const_int32_71, "", label_162);
 ICmpInst* int1_325 = new ICmpInst(*label_162, ICmpInst::ICMP_NE, int32_324, const_int32_52, "");
 ICmpInst* int1_326 = new ICmpInst(*label_162, ICmpInst::ICMP_ULT, int32__lcssa76, const_int32_72, "");
 BinaryOperator* int1_or_cond_i4_us_i = BinaryOperator::Create(Instruction::And, int1_325, int1_326, "or.cond.i4.us.i", label_162);
 BranchInst::Create(label_163, label___readSLEB128__YAIPAPBE_Z_exit6_us_i, int1_or_cond_i4_us_i, label_162);
 
 // Block  (label_163)
 BinaryOperator* int32_328 = BinaryOperator::Create(Instruction::Shl, const_int32_64, int32__lcssa76, "", label_163);
 BinaryOperator* int32_329 = BinaryOperator::Create(Instruction::Or, int32__lcssa75, int32_328, "", label_163);
 BranchInst::Create(label___readSLEB128__YAIPAPBE_Z_exit6_us_i, label_163);
 
 // Block ?readSLEB128@@YAIPAPBE@Z.exit6.us.i (label___readSLEB128__YAIPAPBE_Z_exit6_us_i)
 PHINode* int32_result_1_i5_us_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.1.i5.us.i", label___readSLEB128__YAIPAPBE_Z_exit6_us_i);
 int32_result_1_i5_us_i->addIncoming(int32_329, label_163);
 int32_result_1_i5_us_i->addIncoming(int32__lcssa75, label_162);
 
 ICmpInst* int1_331 = new ICmpInst(*label___readSLEB128__YAIPAPBE_Z_exit6_us_i, ICmpInst::ICMP_EQ, int32_result_1_i_us_i, const_int32_52, "");
 BranchInst::Create(label__loopexit_us_i, label___getEncodingSize__YAIE_Z_exit_us_i, int1_331, label___readSLEB128__YAIPAPBE_Z_exit6_us_i);
 
 // Block ?getEncodingSize@@YAIE@Z.exit.us.i (label___getEncodingSize__YAIE_Z_exit_us_i)
 StoreInst* void_333 = new StoreInst(ptr_classInfo_0, ptr_EntryP_i, false, label___getEncodingSize__YAIE_Z_exit_us_i);
 void_333->setAlignment(4);
 LoadInst* int64_334 = new LoadInst(gvar_int64___exceptionBaseFromUnwindOffset__3_JA, "", false, label___getEncodingSize__YAIE_Z_exit_us_i);
 int64_334->setAlignment(8);
 CastInst* int32_335 = new TruncInst(int64_334, IntegerType::get(mod->getContext(), 32), "", label___getEncodingSize__YAIE_Z_exit_us_i);
 GetElementPtrInst* ptr_336 = GetElementPtrInst::Create(ptr_279, int32_335, "", label___getEncodingSize__YAIE_Z_exit_us_i);
 CastInst* ptr_337 = new BitCastInst(ptr_336, PointerTy_5, "", label___getEncodingSize__YAIE_Z_exit_us_i);
 LoadInst* ptr_exceptionType_013_us_i = new LoadInst(ptr_337, "exceptionType.013.us.i", false, label___getEncodingSize__YAIE_Z_exit_us_i);
 ptr_exceptionType_013_us_i->setAlignment(4);
 ICmpInst* int1_338 = new ICmpInst(*label___getEncodingSize__YAIE_Z_exit_us_i, ICmpInst::ICMP_EQ, ptr_exceptionType_013_us_i, const_ptr_73, "");
 BranchInst::Create(label__loopexit_us_i, label__lr_ph_us_i_preheader, int1_338, label___getEncodingSize__YAIE_Z_exit_us_i);
 
 // Block .lr.ph.us.i.preheader (label__lr_ph_us_i_preheader)
 BranchInst::Create(label__lr_ph_us_i, label__lr_ph_us_i_preheader);
 
 // Block  (label_164)
 Argument* fwdref_342 = new Argument(PointerTy_4);
 std::vector<Value*> ptr_341_indices;
 ptr_341_indices.push_back(const_int32_52);
 ptr_341_indices.push_back(const_int32_52);
 Instruction* ptr_341 = GetElementPtrInst::Create(fwdref_342, ptr_341_indices, "", label_164);
 LoadInst* ptr_exceptionType_0_us_i = new LoadInst(ptr_341, "exceptionType.0.us.i", false, label_164);
 ptr_exceptionType_0_us_i->setAlignment(4);
 ICmpInst* int1_343 = new ICmpInst(*label_164, ICmpInst::ICMP_EQ, ptr_exceptionType_0_us_i, const_ptr_73, "");
 BranchInst::Create(label__loopexit_us_i_loopexit, label__lr_ph_us_i, int1_343, label_164);
 
 // Block .lr.ph.us.i (label__lr_ph_us_i)
 PHINode* ptr_exceptionType_014_us_i = PHINode::Create(PointerTy_4, 2, "exceptionType.014.us.i", label__lr_ph_us_i);
 ptr_exceptionType_014_us_i->addIncoming(ptr_exceptionType_0_us_i, label_164);
 ptr_exceptionType_014_us_i->addIncoming(ptr_exceptionType_013_us_i, label__lr_ph_us_i_preheader);
 
 ICmpInst* int1_345 = new ICmpInst(*label__lr_ph_us_i, ICmpInst::ICMP_EQ, ptr_exceptionType_014_us_i, const_ptr_73, "");
 BranchInst::Create(label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit, label_164, int1_345, label__lr_ph_us_i);
 
 // Block .loopexit.us.i.loopexit (label__loopexit_us_i_loopexit)
 BranchInst::Create(label__loopexit_us_i, label__loopexit_us_i_loopexit);
 
 // Block .loopexit.us.i (label__loopexit_us_i)
 ICmpInst* int1_348 = new ICmpInst(*label__loopexit_us_i, ICmpInst::ICMP_EQ, int32_result_1_i5_us_i, const_int32_52, "");
 BranchInst::Create(label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit72, label_165, int1_348, label__loopexit_us_i);
 
 // Block  (label_165)
 BinaryOperator* int32__sum_us_i = BinaryOperator::Create(Instruction::Add, int32_result_1_i5_us_i, const_int32_53, ".sum.us.i", label_165);
 GetElementPtrInst* ptr_350 = GetElementPtrInst::Create(ptr_p_0_i_us_i, int32__sum_us_i, "", label_165);
 BranchInst::Create(label__split_us_i_backedge, label_165);
 
 // Block ..split_crit_edge.i (label___split_crit_edge_i)
 Argument* fwdref_352 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i.i", label___split_crit_edge_i);
 int32_shift_0_i_i->addIncoming(const_int32_52, label___split_crit_edge_i_preheader);
 int32_shift_0_i_i->addIncoming(fwdref_352, label___split_crit_edge_i_backedge);
 
 Argument* fwdref_353 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i.i", label___split_crit_edge_i);
 int32_result_0_i_i->addIncoming(const_int32_52, label___split_crit_edge_i_preheader);
 int32_result_0_i_i->addIncoming(fwdref_353, label___split_crit_edge_i_backedge);
 
 Argument* fwdref_354 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i_i = PHINode::Create(PointerTy_7, 2, "p.0.i.i", label___split_crit_edge_i);
 ptr_p_0_i_i->addIncoming(ptr_278, label___split_crit_edge_i_preheader);
 ptr_p_0_i_i->addIncoming(fwdref_354, label___split_crit_edge_i_backedge);
 
 GetElementPtrInst* ptr_355 = GetElementPtrInst::Create(ptr_p_0_i_i, const_int32_53, "", label___split_crit_edge_i);
 LoadInst* int8_356 = new LoadInst(ptr_p_0_i_i, "", false, label___split_crit_edge_i);
 int8_356->setAlignment(1);
 CastInst* int32_357 = new ZExtInst(int8_356, IntegerType::get(mod->getContext(), 32), "", label___split_crit_edge_i);
 BinaryOperator* int32_358 = BinaryOperator::Create(Instruction::And, int32_357, const_int32_65, "", label___split_crit_edge_i);
 BinaryOperator* int32_359 = BinaryOperator::Create(Instruction::Shl, int32_358, int32_shift_0_i_i, "", label___split_crit_edge_i);
 BinaryOperator* int32_360 = BinaryOperator::Create(Instruction::Or, int32_359, int32_result_0_i_i, "", label___split_crit_edge_i);
 BinaryOperator* int32_361 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i_i, const_int32_66, "", label___split_crit_edge_i);
 BinaryOperator* int32_362 = BinaryOperator::Create(Instruction::And, int32_357, const_int32_67, "", label___split_crit_edge_i);
 ICmpInst* int1_363 = new ICmpInst(*label___split_crit_edge_i, ICmpInst::ICMP_EQ, int32_362, const_int32_52, "");
 BranchInst::Create(label_166, label___split_crit_edge_i_backedge, int1_363, label___split_crit_edge_i);
 
 // Block ..split_crit_edge.i.backedge (label___split_crit_edge_i_backedge)
 PHINode* int32_shift_0_i_i_be = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i.i.be", label___split_crit_edge_i_backedge);
 int32_shift_0_i_i_be->addIncoming(int32_361, label___split_crit_edge_i);
 int32_shift_0_i_i_be->addIncoming(const_int32_52, label_173);
 
 PHINode* int32_result_0_i_i_be = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i.i.be", label___split_crit_edge_i_backedge);
 int32_result_0_i_i_be->addIncoming(int32_360, label___split_crit_edge_i);
 int32_result_0_i_i_be->addIncoming(const_int32_52, label_173);
 
 Argument* fwdref_365 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i_i_be = PHINode::Create(PointerTy_7, 2, "p.0.i.i.be", label___split_crit_edge_i_backedge);
 ptr_p_0_i_i_be->addIncoming(ptr_355, label___split_crit_edge_i);
 ptr_p_0_i_i_be->addIncoming(fwdref_365, label_173);
 
 BranchInst::Create(label___split_crit_edge_i, label___split_crit_edge_i_backedge);
 
 // Block  (label_166)
 BinaryOperator* int32_367 = BinaryOperator::Create(Instruction::And, int32_357, const_int32_71, "", label_166);
 ICmpInst* int1_368 = new ICmpInst(*label_166, ICmpInst::ICMP_NE, int32_367, const_int32_52, "");
 ICmpInst* int1_369 = new ICmpInst(*label_166, ICmpInst::ICMP_ULT, int32_361, const_int32_72, "");
 BinaryOperator* int1_or_cond_i_i = BinaryOperator::Create(Instruction::And, int1_368, int1_369, "or.cond.i.i", label_166);
 BranchInst::Create(label_167, label___readSLEB128__YAIPAPBE_Z_exit_i, int1_or_cond_i_i, label_166);
 
 // Block  (label_167)
 BinaryOperator* int32_371 = BinaryOperator::Create(Instruction::Shl, const_int32_64, int32_361, "", label_167);
 BinaryOperator* int32_372 = BinaryOperator::Create(Instruction::Or, int32_360, int32_371, "", label_167);
 BranchInst::Create(label___readSLEB128__YAIPAPBE_Z_exit_i, label_167);
 
 // Block ?readSLEB128@@YAIPAPBE@Z.exit.i (label___readSLEB128__YAIPAPBE_Z_exit_i)
 PHINode* int32_result_1_i_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.1.i.i", label___readSLEB128__YAIPAPBE_Z_exit_i);
 int32_result_1_i_i->addIncoming(int32_372, label_167);
 int32_result_1_i_i->addIncoming(int32_360, label_166);
 
 BranchInst::Create(label_168, label___readSLEB128__YAIPAPBE_Z_exit_i);
 
 // Block  (label_168)
 Argument* fwdref_375 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i1_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i1.i", label_168);
 int32_shift_0_i1_i->addIncoming(const_int32_52, label___readSLEB128__YAIPAPBE_Z_exit_i);
 int32_shift_0_i1_i->addIncoming(fwdref_375, label_168);
 
 Argument* fwdref_376 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i2_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i2.i", label_168);
 int32_result_0_i2_i->addIncoming(const_int32_52, label___readSLEB128__YAIPAPBE_Z_exit_i);
 int32_result_0_i2_i->addIncoming(fwdref_376, label_168);
 
 Argument* fwdref_378 = new Argument(PointerTy_7);
 PHINode* ptr_377 = PHINode::Create(PointerTy_7, 2, "", label_168);
 ptr_377->addIncoming(ptr_p_0_i_i, label___readSLEB128__YAIPAPBE_Z_exit_i);
 ptr_377->addIncoming(fwdref_378, label_168);
 
 Argument* fwdref_379 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i3_i = PHINode::Create(PointerTy_7, 2, "p.0.i3.i", label_168);
 ptr_p_0_i3_i->addIncoming(ptr_355, label___readSLEB128__YAIPAPBE_Z_exit_i);
 ptr_p_0_i3_i->addIncoming(fwdref_379, label_168);
 
 GetElementPtrInst* ptr_380 = GetElementPtrInst::Create(ptr_377, const_int32_50, "", label_168);
 LoadInst* int8_381 = new LoadInst(ptr_p_0_i3_i, "", false, label_168);
 int8_381->setAlignment(1);
 CastInst* int32_382 = new ZExtInst(int8_381, IntegerType::get(mod->getContext(), 32), "", label_168);
 BinaryOperator* int32_383 = BinaryOperator::Create(Instruction::And, int32_382, const_int32_65, "", label_168);
 BinaryOperator* int32_384 = BinaryOperator::Create(Instruction::Shl, int32_383, int32_shift_0_i1_i, "", label_168);
 BinaryOperator* int32_385 = BinaryOperator::Create(Instruction::Or, int32_384, int32_result_0_i2_i, "", label_168);
 BinaryOperator* int32_386 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i1_i, const_int32_66, "", label_168);
 BinaryOperator* int32_387 = BinaryOperator::Create(Instruction::And, int32_382, const_int32_67, "", label_168);
 ICmpInst* int1_388 = new ICmpInst(*label_168, ICmpInst::ICMP_EQ, int32_387, const_int32_52, "");
 BranchInst::Create(label_169, label_168, int1_388, label_168);
 
 // Block  (label_169)
 PHINode* int32__lcssa80 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa80", label_169);
 int32__lcssa80->addIncoming(int32_386, label_168);
 
 PHINode* int32__lcssa79 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa79", label_169);
 int32__lcssa79->addIncoming(int32_385, label_168);
 
 PHINode* int32__lcssa78 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa78", label_169);
 int32__lcssa78->addIncoming(int32_382, label_168);
 
 BinaryOperator* int32_390 = BinaryOperator::Create(Instruction::And, int32__lcssa78, const_int32_71, "", label_169);
 ICmpInst* int1_391 = new ICmpInst(*label_169, ICmpInst::ICMP_NE, int32_390, const_int32_52, "");
 ICmpInst* int1_392 = new ICmpInst(*label_169, ICmpInst::ICMP_ULT, int32__lcssa80, const_int32_72, "");
 BinaryOperator* int1_or_cond_i4_i = BinaryOperator::Create(Instruction::And, int1_391, int1_392, "or.cond.i4.i", label_169);
 BranchInst::Create(label_170, label___readSLEB128__YAIPAPBE_Z_exit6_i, int1_or_cond_i4_i, label_169);
 
 // Block  (label_170)
 BinaryOperator* int32_394 = BinaryOperator::Create(Instruction::Shl, const_int32_64, int32__lcssa80, "", label_170);
 BinaryOperator* int32_395 = BinaryOperator::Create(Instruction::Or, int32__lcssa79, int32_394, "", label_170);
 BranchInst::Create(label___readSLEB128__YAIPAPBE_Z_exit6_i, label_170);
 
 // Block ?readSLEB128@@YAIPAPBE@Z.exit6.i (label___readSLEB128__YAIPAPBE_Z_exit6_i)
 PHINode* int32_result_1_i5_i = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.1.i5.i", label___readSLEB128__YAIPAPBE_Z_exit6_i);
 int32_result_1_i5_i->addIncoming(int32_395, label_170);
 int32_result_1_i5_i->addIncoming(int32__lcssa79, label_169);
 
 ICmpInst* int1_397 = new ICmpInst(*label___readSLEB128__YAIPAPBE_Z_exit6_i, ICmpInst::ICMP_EQ, int32_result_1_i_i, const_int32_52, "");
 BranchInst::Create(label__loopexit_i, label_171, int1_397, label___readSLEB128__YAIPAPBE_Z_exit6_i);
 
 // Block  (label_171)
 BranchInst::Create(label__us_lcssa_i, label___getEncodingSize__YAIE_Z_exit_i, int1_brmerge_i, label_171);
 
 // Block .us-lcssa.i (label__us_lcssa_i)
 CallInst* void_400 = CallInst::Create(func_abort, "", label__us_lcssa_i);
 void_400->setCallingConv(CallingConv::C);
 void_400->setTailCall(true);
 AttributeSet void_400_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_400_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_400->setAttributes(void_400_PAL);
 
 new UnreachableInst(mod->getContext(), label__us_lcssa_i);
 
 // Block ?getEncodingSize@@YAIE@Z.exit.i (label___getEncodingSize__YAIE_Z_exit_i)
 LoadInst* int32_switch_load_i_i = new LoadInst(ptr_switch_gep_i_i, "switch.load.i.i", false, label___getEncodingSize__YAIE_Z_exit_i);
 int32_switch_load_i_i->setAlignment(4);
 BinaryOperator* int32_402 = BinaryOperator::Create(Instruction::Sub, const_int32_52, int32_result_1_i_i, "", label___getEncodingSize__YAIE_Z_exit_i);
 BinaryOperator* int32_403 = BinaryOperator::Create(Instruction::Mul, int32_switch_load_i_i, int32_402, "", label___getEncodingSize__YAIE_Z_exit_i);
 GetElementPtrInst* ptr_404 = GetElementPtrInst::Create(ptr_classInfo_0, int32_403, "", label___getEncodingSize__YAIE_Z_exit_i);
 StoreInst* void_405 = new StoreInst(ptr_404, ptr_EntryP_i, false, label___getEncodingSize__YAIE_Z_exit_i);
 void_405->setAlignment(4);
 std::vector<Value*> int32_406_params;
 int32_406_params.push_back(ptr_EntryP_i);
 int32_406_params.push_back(int8_195);
 CallInst* int32_406 = CallInst::Create(func___readEncodedPointer__YAIPAPBEE_Z, int32_406_params, "", label___getEncodingSize__YAIE_Z_exit_i);
 int32_406->setCallingConv(CallingConv::Fast);
 int32_406->setTailCall(false);
 AttributeSet int32_406_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 2U, B);
   }
  
  Attrs.push_back(PAS);
  int32_406_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_406->setAttributes(int32_406_PAL);
 
 CastInst* ptr_407 = new IntToPtrInst(int32_406, PointerTy_4, "", label___getEncodingSize__YAIE_Z_exit_i);
 LoadInst* int64_408 = new LoadInst(gvar_int64___exceptionBaseFromUnwindOffset__3_JA, "", false, label___getEncodingSize__YAIE_Z_exit_i);
 int64_408->setAlignment(8);
 CastInst* int32_409 = new TruncInst(int64_408, IntegerType::get(mod->getContext(), 32), "", label___getEncodingSize__YAIE_Z_exit_i);
 GetElementPtrInst* ptr_410 = GetElementPtrInst::Create(ptr_279, int32_409, "", label___getEncodingSize__YAIE_Z_exit_i);
 CastInst* ptr_411 = new BitCastInst(ptr_410, PointerTy_5, "", label___getEncodingSize__YAIE_Z_exit_i);
 LoadInst* ptr_exceptionType_013_i = new LoadInst(ptr_411, "exceptionType.013.i", false, label___getEncodingSize__YAIE_Z_exit_i);
 ptr_exceptionType_013_i->setAlignment(4);
 ICmpInst* int1_412 = new ICmpInst(*label___getEncodingSize__YAIE_Z_exit_i, ICmpInst::ICMP_EQ, ptr_exceptionType_013_i, const_ptr_73, "");
 BranchInst::Create(label__loopexit_i, label__lr_ph_i_preheader, int1_412, label___getEncodingSize__YAIE_Z_exit_i);
 
 // Block .lr.ph.i.preheader (label__lr_ph_i_preheader)
 BranchInst::Create(label__lr_ph_i, label__lr_ph_i_preheader);
 
 // Block  (label_172)
 Argument* fwdref_416 = new Argument(PointerTy_4);
 std::vector<Value*> ptr_415_indices;
 ptr_415_indices.push_back(const_int32_52);
 ptr_415_indices.push_back(const_int32_52);
 Instruction* ptr_415 = GetElementPtrInst::Create(fwdref_416, ptr_415_indices, "", label_172);
 LoadInst* ptr_exceptionType_0_i = new LoadInst(ptr_415, "exceptionType.0.i", false, label_172);
 ptr_exceptionType_0_i->setAlignment(4);
 ICmpInst* int1_417 = new ICmpInst(*label_172, ICmpInst::ICMP_EQ, ptr_exceptionType_0_i, const_ptr_73, "");
 BranchInst::Create(label__loopexit_i_loopexit, label__lr_ph_i, int1_417, label_172);
 
 // Block .lr.ph.i (label__lr_ph_i)
 PHINode* ptr_exceptionType_014_i = PHINode::Create(PointerTy_4, 2, "exceptionType.014.i", label__lr_ph_i);
 ptr_exceptionType_014_i->addIncoming(ptr_exceptionType_0_i, label_172);
 ptr_exceptionType_014_i->addIncoming(ptr_exceptionType_013_i, label__lr_ph_i_preheader);
 
 ICmpInst* int1_419 = new ICmpInst(*label__lr_ph_i, ICmpInst::ICMP_EQ, ptr_exceptionType_014_i, ptr_407, "");
 BranchInst::Create(label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit73, label_172, int1_419, label__lr_ph_i);
 
 // Block .loopexit.i.loopexit (label__loopexit_i_loopexit)
 BranchInst::Create(label__loopexit_i, label__loopexit_i_loopexit);
 
 // Block .loopexit.i (label__loopexit_i)
 ICmpInst* int1_422 = new ICmpInst(*label__loopexit_i, ICmpInst::ICMP_EQ, int32_result_1_i5_i, const_int32_52, "");
 BranchInst::Create(label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit74, label_173, int1_422, label__loopexit_i);
 
 // Block  (label_173)
 BinaryOperator* int32__sum_i = BinaryOperator::Create(Instruction::Add, int32_result_1_i5_i, const_int32_53, ".sum.i", label_173);
 GetElementPtrInst* ptr_424 = GetElementPtrInst::Create(ptr_p_0_i_i, int32__sum_i, "", label_173);
 BranchInst::Create(label___split_crit_edge_i_backedge, label_173);
 
 // Block ?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit.loopexit (label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit)
 PHINode* int32_result_1_i_us_i_lcssa = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, "result.1.i.us.i.lcssa", label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit);
 int32_result_1_i_us_i_lcssa->addIncoming(int32_result_1_i_us_i, label__lr_ph_us_i);
 
 BranchInst::Create(label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit);
 
 // Block ?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit.loopexit72 (label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit72)
 BranchInst::Create(label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit72);
 
 // Block ?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit.loopexit73 (label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit73)
 PHINode* int32_result_1_i_i_lcssa81 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, "result.1.i.i.lcssa81", label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit73);
 int32_result_1_i_i_lcssa81->addIncoming(int32_result_1_i_i, label__lr_ph_i);
 
 BranchInst::Create(label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit73);
 
 // Block ?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit.loopexit74 (label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit74)
 BranchInst::Create(label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit74);
 
 // Block ?handleActionValue@@YA_NPA_JEPBEI_KPAU_Unwind_Exception@@@Z.exit (label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit)
 PHINode* int32_430 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 4, "", label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit);
 int32_430->addIncoming(int32_result_1_i_us_i_lcssa, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit);
 int32_430->addIncoming(const_int32_52, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit72);
 int32_430->addIncoming(int32_result_1_i_i_lcssa81, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit73);
 int32_430->addIncoming(const_int32_52, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit74);
 
 PHINode* int1__0_i = PHINode::Create(IntegerType::get(mod->getContext(), 1), 4, ".0.i", label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit);
 int1__0_i->addIncoming(const_int1_55, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit);
 int1__0_i->addIncoming(const_int1_54, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit72);
 int1__0_i->addIncoming(const_int1_55, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit73);
 int1__0_i->addIncoming(const_int1_54, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit_loopexit74);
 
 std::vector<Value*> void_431_params;
 void_431_params.push_back(const_int64_69);
 void_431_params.push_back(ptr_276);
 CallInst* void_431 = CallInst::Create(func_llvm_lifetime_end, void_431_params, "", label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit);
 void_431->setCallingConv(CallingConv::C);
 void_431->setTailCall(false);
 AttributeSet void_431_PAL;
 void_431->setAttributes(void_431_PAL);
 
 BranchInst::Create(label_174, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit);
 
 // Block  (label_174)
 PHINode* int32__off0 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, ".off0", label_174);
 int32__off0->addIncoming(int32_430, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit);
 int32__off0->addIncoming(const_int32_52, label_157);
 
 PHINode* int1_exceptionMatched_0 = PHINode::Create(IntegerType::get(mod->getContext(), 1), 2, "exceptionMatched.0", label_174);
 int1_exceptionMatched_0->addIncoming(int1__0_i, label___handleActionValue__YA_NPA_JEPBEI_KPAU_Unwind_Exception___Z_exit);
 int1_exceptionMatched_0->addIncoming(const_int1_54, label_157);
 
 BinaryOperator* int32_433 = BinaryOperator::Create(Instruction::And, int32_actions, const_int32_53, "", label_174);
 ICmpInst* int1_434 = new ICmpInst(*label_174, ICmpInst::ICMP_EQ, int32_433, const_int32_52, "");
 BranchInst::Create(label_175, label_179, int1_434, label_174);
 
 // Block  (label_175)
 CastInst* int32_436 = new PtrToIntInst(ptr_exceptionObject, IntegerType::get(mod->getContext(), 32), "", label_175);
 std::vector<Value*> void_437_params;
 void_437_params.push_back(ptr_context);
 void_437_params.push_back(const_int32_52);
 void_437_params.push_back(int32_436);
 CallInst* void_437 = CallInst::Create(func__Unwind_SetGR, void_437_params, "", label_175);
 void_437->setCallingConv(CallingConv::C);
 void_437->setTailCall(true);
 AttributeSet void_437_PAL;
 void_437->setAttributes(void_437_PAL);
 
 BinaryOperator* int1_brmerge_demorgan = BinaryOperator::Create(Instruction::And, int1_274, int1_exceptionMatched_0, "brmerge.demorgan", label_175);
 BranchInst::Create(label_177, label_176, int1_brmerge_demorgan, label_175);
 
 // Block  (label_176)
 std::vector<Value*> void_439_params;
 void_439_params.push_back(ptr_context);
 void_439_params.push_back(const_int32_50);
 void_439_params.push_back(const_int32_52);
 CallInst* void_439 = CallInst::Create(func__Unwind_SetGR, void_439_params, "", label_176);
 void_439->setCallingConv(CallingConv::C);
 void_439->setTailCall(true);
 AttributeSet void_439_PAL;
 void_439->setAttributes(void_439_PAL);
 
 BranchInst::Create(label_178, label_176);
 
 // Block  (label_177)
 std::vector<Value*> void_441_params;
 void_441_params.push_back(ptr_context);
 void_441_params.push_back(const_int32_50);
 void_441_params.push_back(int32__off0);
 CallInst* void_441 = CallInst::Create(func__Unwind_SetGR, void_441_params, "", label_177);
 void_441->setCallingConv(CallingConv::C);
 void_441->setTailCall(true);
 AttributeSet void_441_PAL;
 void_441->setAttributes(void_441_PAL);
 
 BranchInst::Create(label_178, label_177);
 
 // Block  (label_178)
 BinaryOperator* int32_443 = BinaryOperator::Create(Instruction::Add, int32__lcssa85, int32_183, "", label_178);
 std::vector<Value*> void_444_params;
 void_444_params.push_back(ptr_context);
 void_444_params.push_back(int32_443);
 CallInst* void_444 = CallInst::Create(func__Unwind_SetIP, void_444_params, "", label_178);
 void_444->setCallingConv(CallingConv::C);
 void_444->setTailCall(true);
 AttributeSet void_444_PAL;
 void_444->setAttributes(void_444_PAL);
 
 BranchInst::Create(label__loopexit, label_178);
 
 // Block  (label_179)
 SelectInst* int32__ = SelectInst::Create(int1_exceptionMatched_0, const_int32_74, const_int32_51, ".", label_179);
 ReturnInst::Create(mod->getContext(), int32__, label_179);
 
 // Block .loopexit.loopexit (label__loopexit_loopexit)
 BranchInst::Create(label__loopexit, label__loopexit_loopexit);
 
 // Block .loopexit (label__loopexit)
 PHINode* int32_ret_0 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 3, "ret.0", label__loopexit);
 int32_ret_0->addIncoming(const_int32_66, label_178);
 int32_ret_0->addIncoming(const_int32_51, label___readULEB128__YAIPAPBE_Z_exit6);
 int32_ret_0->addIncoming(const_int32_51, label__loopexit_loopexit);
 
 ReturnInst::Create(mod->getContext(), int32_ret_0, label__loopexit);
 
 // Resolve Forward References
 fwdref_225->replaceAllUsesWith(ptr_p_0_i5); delete fwdref_225;
 fwdref_202->replaceAllUsesWith(ptr_p_0_i); delete fwdref_202;
 fwdref_199->replaceAllUsesWith(int32_210); delete fwdref_199;
 fwdref_223->replaceAllUsesWith(int32_232); delete fwdref_223;
 fwdref_222->replaceAllUsesWith(int32_233); delete fwdref_222;
 fwdref_203->replaceAllUsesWith(ptr_204); delete fwdref_203;
 fwdref_226->replaceAllUsesWith(ptr_227); delete fwdref_226;
 fwdref_200->replaceAllUsesWith(int32_209); delete fwdref_200;
 fwdref_251->replaceAllUsesWith(int32_258); delete fwdref_251;
 fwdref_250->replaceAllUsesWith(int32_259); delete fwdref_250;
 fwdref_252->replaceAllUsesWith(ptr_253); delete fwdref_252;
 fwdref_286->replaceAllUsesWith(int32_shift_0_i_us_i_be); delete fwdref_286;
 fwdref_288->replaceAllUsesWith(ptr_p_0_i_us_i_be); delete fwdref_288;
 fwdref_353->replaceAllUsesWith(int32_result_0_i_i_be); delete fwdref_353;
 fwdref_312->replaceAllUsesWith(ptr_p_0_i3_us_i); delete fwdref_312;
 fwdref_287->replaceAllUsesWith(int32_result_0_i_us_i_be); delete fwdref_287;
 fwdref_342->replaceAllUsesWith(ptr_exceptionType_014_us_i); delete fwdref_342;
 fwdref_352->replaceAllUsesWith(int32_shift_0_i_i_be); delete fwdref_352;
 fwdref_354->replaceAllUsesWith(ptr_p_0_i_i_be); delete fwdref_354;
 fwdref_416->replaceAllUsesWith(ptr_exceptionType_014_i); delete fwdref_416;
 fwdref_378->replaceAllUsesWith(ptr_p_0_i3_i); delete fwdref_378;
 fwdref_313->replaceAllUsesWith(ptr_314); delete fwdref_313;
 fwdref_310->replaceAllUsesWith(int32_319); delete fwdref_310;
 fwdref_309->replaceAllUsesWith(int32_320); delete fwdref_309;
 fwdref_299->replaceAllUsesWith(ptr_350); delete fwdref_299;
 fwdref_375->replaceAllUsesWith(int32_386); delete fwdref_375;
 fwdref_376->replaceAllUsesWith(int32_385); delete fwdref_376;
 fwdref_379->replaceAllUsesWith(ptr_380); delete fwdref_379;
 fwdref_365->replaceAllUsesWith(ptr_424); delete fwdref_365;
 
}

// Function: ?cleanupException@@YAXW4_Unwind_Reason_Code@@PAU_Unwind_Exception@@@Z (func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z)
{
 Function::arg_iterator args = func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z->arg_begin();
 Value* int32_reason = args++;
 int32_reason->setName("reason");
 Value* ptr_ex = args++;
 ptr_ex->setName("ex");
 
 BasicBlock* label_449 = BasicBlock::Create(mod->getContext(), "",func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z,0);
 BasicBlock* label_450 = BasicBlock::Create(mod->getContext(), "",func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z,0);
 BasicBlock* label_451 = BasicBlock::Create(mod->getContext(), "",func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z,0);
 
 // Block  (label_449)
 ICmpInst* int1_452 = new ICmpInst(*label_449, ICmpInst::ICMP_EQ, ptr_ex, const_ptr_75, "");
 BranchInst::Create(label_451, label_450, int1_452, label_449);
 
 // Block  (label_450)
 CastInst* ptr_454 = new BitCastInst(ptr_ex, PointerTy_7, "", label_450);
 LoadInst* int64_455 = new LoadInst(gvar_int64___exceptionBaseFromUnwindOffset__3_JA, "", false, label_450);
 int64_455->setAlignment(8);
 CastInst* int32_456 = new TruncInst(int64_455, IntegerType::get(mod->getContext(), 32), "", label_450);
 GetElementPtrInst* ptr_457 = GetElementPtrInst::Create(ptr_454, int32_456, "", label_450);
 CallInst* void_458 = CallInst::Create(func_free, ptr_457, "", label_450);
 void_458->setCallingConv(CallingConv::C);
 void_458->setTailCall(true);
 AttributeSet void_458_PAL;
 void_458->setAttributes(void_458_PAL);
 
 BranchInst::Create(label_451, label_450);
 
 // Block  (label_451)
 ReturnInst::Create(mod->getContext(), label_451);
 
}

// Function: throwException (func_throwException)
{
 Function::arg_iterator args = func_throwException->arg_begin();
 Value* ptr_obj = args++;
 ptr_obj->setName("obj");
 
 BasicBlock* label_461 = BasicBlock::Create(mod->getContext(), "",func_throwException,0);
 
 // Block  (label_461)
 CallInst* ptr_462 = CallInst::Create(func_malloc, const_int32_76, "", label_461);
 ptr_462->setCallingConv(CallingConv::C);
 ptr_462->setTailCall(true);
 AttributeSet ptr_462_PAL;
 ptr_462->setAttributes(ptr_462_PAL);
 
 std::vector<Value*> void_463_params;
 void_463_params.push_back(ptr_462);
 void_463_params.push_back(const_int8_56);
 void_463_params.push_back(const_int32_76);
 void_463_params.push_back(const_int32_77);
 void_463_params.push_back(const_int1_54);
 CallInst* void_463 = CallInst::Create(func_llvm_memset_p0i8_i32, void_463_params, "", label_461);
 void_463->setCallingConv(CallingConv::C);
 void_463->setTailCall(true);
 AttributeSet void_463_PAL;
 void_463->setAttributes(void_463_PAL);
 
 std::vector<Value*> ptr_464_indices;
 ptr_464_indices.push_back(const_int32_52);
 ptr_464_indices.push_back(const_int32_52);
 Instruction* ptr_464 = GetElementPtrInst::Create(ptr_obj, ptr_464_indices, "", label_461);
 LoadInst* ptr_465 = new LoadInst(ptr_464, "", false, label_461);
 ptr_465->setAlignment(4);
 CastInst* ptr_466 = new BitCastInst(ptr_462, PointerTy_5, "", label_461);
 StoreInst* void_467 = new StoreInst(ptr_465, ptr_466, false, label_461);
 void_467->setAlignment(4);
 GetElementPtrInst* ptr_468 = GetElementPtrInst::Create(ptr_462, const_int32_77, "", label_461);
 CastInst* ptr_469 = new BitCastInst(ptr_468, PointerTy_22, "", label_461);
 CastInst* ptr_470 = new BitCastInst(ptr_468, PointerTy_0, "", label_461);
 StoreInst* void_471 = new StoreInst(const_int64_78, ptr_470, false, label_461);
 void_471->setAlignment(8);
 GetElementPtrInst* ptr_472 = GetElementPtrInst::Create(ptr_462, const_int32_79, "", label_461);
 CastInst* ptr_473 = new BitCastInst(ptr_472, PointerTy_43, "", label_461);
 StoreInst* void_474 = new StoreInst(func___cleanupException__YAXW4_Unwind_Reason_Code__PAU_Unwind_Exception___Z, ptr_473, false, label_461);
 void_474->setAlignment(4);
 CallInst* int32_475 = CallInst::Create(func__Unwind_RaiseException, ptr_469, "", label_461);
 int32_475->setCallingConv(CallingConv::C);
 int32_475->setTailCall(true);
 AttributeSet int32_475_PAL;
 int32_475->setAttributes(int32_475_PAL);
 
 new UnreachableInst(mod->getContext(), label_461);
 
}

// Function: ?readEncodedPointer@@YAIPAPBEE@Z (func___readEncodedPointer__YAIPAPBEE_Z)
{
 Function::arg_iterator args = func___readEncodedPointer__YAIPAPBEE_Z->arg_begin();
 Value* ptr_data = args++;
 ptr_data->setName("data");
 Value* int8_encoding = args++;
 int8_encoding->setName("encoding");
 
 BasicBlock* label_477 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_478 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label__preheader4_preheader = BasicBlock::Create(mod->getContext(), ".preheader4.preheader",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label__preheader_preheader_479 = BasicBlock::Create(mod->getContext(), ".preheader.preheader",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_480 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label__preheader_481 = BasicBlock::Create(mod->getContext(), ".preheader",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label__preheader4 = BasicBlock::Create(mod->getContext(), ".preheader4",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_482 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_483 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_484 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_485 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_486 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_487 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_488 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_489 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_490 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label___readULEB128__YAIPAPBE_Z_exit_loopexit = BasicBlock::Create(mod->getContext(), "\x01?readULEB128@@YAIPAPBE@Z.exit.loopexit",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label___readULEB128__YAIPAPBE_Z_exit_491 = BasicBlock::Create(mod->getContext(), "\x01?readULEB128@@YAIPAPBE@Z.exit",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_492 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_493 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_494 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_495 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_496 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 BasicBlock* label_497 = BasicBlock::Create(mod->getContext(), "",func___readEncodedPointer__YAIPAPBEE_Z,0);
 
 // Block  (label_477)
 LoadInst* ptr_498 = new LoadInst(ptr_data, "", false, label_477);
 ptr_498->setAlignment(4);
 CastInst* int32_499 = new ZExtInst(int8_encoding, IntegerType::get(mod->getContext(), 32), "", label_477);
 ICmpInst* int1_500 = new ICmpInst(*label_477, ICmpInst::ICMP_EQ, int8_encoding, const_int8_58, "");
 BranchInst::Create(label_497, label_478, int1_500, label_477);
 
 // Block  (label_478)
 BinaryOperator* int32_502 = BinaryOperator::Create(Instruction::And, int32_499, const_int32_59, "", label_478);
 SwitchInst* void_503 = SwitchInst::Create(int32_502, label_490, 9, label_478);
 void_503->addCase(const_int32_52, label_480);
 void_503->addCase(const_int32_53, label__preheader_preheader_479);
 void_503->addCase(const_int32_80, label__preheader4_preheader);
 void_503->addCase(const_int32_50, label_484);
 void_503->addCase(const_int32_81, label_485);
 void_503->addCase(const_int32_49, label_486);
 void_503->addCase(const_int32_82, label_487);
 void_503->addCase(const_int32_83, label_488);
 void_503->addCase(const_int32_70, label_489);
 
 
 // Block .preheader4.preheader (label__preheader4_preheader)
 BranchInst::Create(label__preheader4, label__preheader4_preheader);
 
 // Block .preheader.preheader (label__preheader_preheader_479)
 BranchInst::Create(label__preheader_481, label__preheader_preheader_479);
 
 // Block  (label_480)
 CastInst* ptr_506 = new BitCastInst(ptr_498, PointerTy_9, "", label_480);
 LoadInst* int32_507 = new LoadInst(ptr_506, "", false, label_480);
 int32_507->setAlignment(4);
 GetElementPtrInst* ptr_508 = GetElementPtrInst::Create(ptr_498, const_int32_49, "", label_480);
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label_480);
 
 // Block .preheader (label__preheader_481)
 Argument* fwdref_511 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i_510 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i", label__preheader_481);
 int32_shift_0_i_510->addIncoming(fwdref_511, label__preheader_481);
 int32_shift_0_i_510->addIncoming(const_int32_52, label__preheader_preheader_479);
 
 Argument* fwdref_513 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i_512 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i", label__preheader_481);
 int32_result_0_i_512->addIncoming(fwdref_513, label__preheader_481);
 int32_result_0_i_512->addIncoming(const_int32_52, label__preheader_preheader_479);
 
 Argument* fwdref_515 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i_514 = PHINode::Create(PointerTy_7, 2, "p.0.i", label__preheader_481);
 ptr_p_0_i_514->addIncoming(fwdref_515, label__preheader_481);
 ptr_p_0_i_514->addIncoming(ptr_498, label__preheader_preheader_479);
 
 GetElementPtrInst* ptr_516 = GetElementPtrInst::Create(ptr_p_0_i_514, const_int32_53, "", label__preheader_481);
 LoadInst* int8_517 = new LoadInst(ptr_p_0_i_514, "", false, label__preheader_481);
 int8_517->setAlignment(1);
 CastInst* int32_518 = new ZExtInst(int8_517, IntegerType::get(mod->getContext(), 32), "", label__preheader_481);
 BinaryOperator* int32_519 = BinaryOperator::Create(Instruction::And, int32_518, const_int32_65, "", label__preheader_481);
 BinaryOperator* int32_520 = BinaryOperator::Create(Instruction::Shl, int32_519, int32_shift_0_i_510, "", label__preheader_481);
 BinaryOperator* int32_521 = BinaryOperator::Create(Instruction::Or, int32_520, int32_result_0_i_512, "", label__preheader_481);
 BinaryOperator* int32_522 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i_510, const_int32_66, "", label__preheader_481);
 BinaryOperator* int32_523 = BinaryOperator::Create(Instruction::And, int32_518, const_int32_67, "", label__preheader_481);
 ICmpInst* int1_524 = new ICmpInst(*label__preheader_481, ICmpInst::ICMP_EQ, int32_523, const_int32_52, "");
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_loopexit, label__preheader_481, int1_524, label__preheader_481);
 
 // Block .preheader4 (label__preheader4)
 Argument* fwdref_526 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_shift_0_i1 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "shift.0.i1", label__preheader4);
 int32_shift_0_i1->addIncoming(fwdref_526, label__preheader4);
 int32_shift_0_i1->addIncoming(const_int32_52, label__preheader4_preheader);
 
 Argument* fwdref_527 = new Argument(IntegerType::get(mod->getContext(), 32));
 PHINode* int32_result_0_i2 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.0.i2", label__preheader4);
 int32_result_0_i2->addIncoming(fwdref_527, label__preheader4);
 int32_result_0_i2->addIncoming(const_int32_52, label__preheader4_preheader);
 
 Argument* fwdref_528 = new Argument(PointerTy_7);
 PHINode* ptr_p_0_i3 = PHINode::Create(PointerTy_7, 2, "p.0.i3", label__preheader4);
 ptr_p_0_i3->addIncoming(fwdref_528, label__preheader4);
 ptr_p_0_i3->addIncoming(ptr_498, label__preheader4_preheader);
 
 GetElementPtrInst* ptr_529 = GetElementPtrInst::Create(ptr_p_0_i3, const_int32_53, "", label__preheader4);
 LoadInst* int8_530 = new LoadInst(ptr_p_0_i3, "", false, label__preheader4);
 int8_530->setAlignment(1);
 CastInst* int32_531 = new ZExtInst(int8_530, IntegerType::get(mod->getContext(), 32), "", label__preheader4);
 BinaryOperator* int32_532 = BinaryOperator::Create(Instruction::And, int32_531, const_int32_65, "", label__preheader4);
 BinaryOperator* int32_533 = BinaryOperator::Create(Instruction::Shl, int32_532, int32_shift_0_i1, "", label__preheader4);
 BinaryOperator* int32_534 = BinaryOperator::Create(Instruction::Or, int32_533, int32_result_0_i2, "", label__preheader4);
 BinaryOperator* int32_535 = BinaryOperator::Create(Instruction::Add, int32_shift_0_i1, const_int32_66, "", label__preheader4);
 BinaryOperator* int32_536 = BinaryOperator::Create(Instruction::And, int32_531, const_int32_67, "", label__preheader4);
 ICmpInst* int1_537 = new ICmpInst(*label__preheader4, ICmpInst::ICMP_EQ, int32_536, const_int32_52, "");
 BranchInst::Create(label_482, label__preheader4, int1_537, label__preheader4);
 
 // Block  (label_482)
 PHINode* int32__lcssa24 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa24", label_482);
 int32__lcssa24->addIncoming(int32_535, label__preheader4);
 
 PHINode* int32__lcssa23 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa23", label_482);
 int32__lcssa23->addIncoming(int32_534, label__preheader4);
 
 PHINode* int32__lcssa22 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa22", label_482);
 int32__lcssa22->addIncoming(int32_531, label__preheader4);
 
 PHINode* ptr__lcssa21 = PHINode::Create(PointerTy_7, 1, ".lcssa21", label_482);
 ptr__lcssa21->addIncoming(ptr_529, label__preheader4);
 
 BinaryOperator* int32_539 = BinaryOperator::Create(Instruction::And, int32__lcssa22, const_int32_71, "", label_482);
 ICmpInst* int1_540 = new ICmpInst(*label_482, ICmpInst::ICMP_NE, int32_539, const_int32_52, "");
 ICmpInst* int1_541 = new ICmpInst(*label_482, ICmpInst::ICMP_ULT, int32__lcssa24, const_int32_72, "");
 BinaryOperator* int1_or_cond_i = BinaryOperator::Create(Instruction::And, int1_540, int1_541, "or.cond.i", label_482);
 BranchInst::Create(label_483, label___readULEB128__YAIPAPBE_Z_exit_491, int1_or_cond_i, label_482);
 
 // Block  (label_483)
 BinaryOperator* int32_543 = BinaryOperator::Create(Instruction::Shl, const_int32_64, int32__lcssa24, "", label_483);
 BinaryOperator* int32_544 = BinaryOperator::Create(Instruction::Or, int32__lcssa23, int32_543, "", label_483);
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label_483);
 
 // Block  (label_484)
 CastInst* ptr_546 = new BitCastInst(ptr_498, PointerTy_46, "", label_484);
 LoadInst* int16_547 = new LoadInst(ptr_546, "", false, label_484);
 int16_547->setAlignment(2);
 CastInst* int32_548 = new ZExtInst(int16_547, IntegerType::get(mod->getContext(), 32), "", label_484);
 GetElementPtrInst* ptr_549 = GetElementPtrInst::Create(ptr_498, const_int32_50, "", label_484);
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label_484);
 
 // Block  (label_485)
 CastInst* ptr_551 = new BitCastInst(ptr_498, PointerTy_9, "", label_485);
 LoadInst* int32_552 = new LoadInst(ptr_551, "", false, label_485);
 int32_552->setAlignment(4);
 GetElementPtrInst* ptr_553 = GetElementPtrInst::Create(ptr_498, const_int32_49, "", label_485);
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label_485);
 
 // Block  (label_486)
 CastInst* ptr_555 = new BitCastInst(ptr_498, PointerTy_0, "", label_486);
 LoadInst* int64_556 = new LoadInst(ptr_555, "", false, label_486);
 int64_556->setAlignment(8);
 CastInst* int32_557 = new TruncInst(int64_556, IntegerType::get(mod->getContext(), 32), "", label_486);
 GetElementPtrInst* ptr_558 = GetElementPtrInst::Create(ptr_498, const_int32_51, "", label_486);
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label_486);
 
 // Block  (label_487)
 CastInst* ptr_560 = new BitCastInst(ptr_498, PointerTy_46, "", label_487);
 LoadInst* int16_561 = new LoadInst(ptr_560, "", false, label_487);
 int16_561->setAlignment(2);
 CastInst* int32_562 = new SExtInst(int16_561, IntegerType::get(mod->getContext(), 32), "", label_487);
 GetElementPtrInst* ptr_563 = GetElementPtrInst::Create(ptr_498, const_int32_50, "", label_487);
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label_487);
 
 // Block  (label_488)
 CastInst* ptr_565 = new BitCastInst(ptr_498, PointerTy_9, "", label_488);
 LoadInst* int32_566 = new LoadInst(ptr_565, "", false, label_488);
 int32_566->setAlignment(4);
 GetElementPtrInst* ptr_567 = GetElementPtrInst::Create(ptr_498, const_int32_49, "", label_488);
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label_488);
 
 // Block  (label_489)
 CastInst* ptr_569 = new BitCastInst(ptr_498, PointerTy_0, "", label_489);
 LoadInst* int64_570 = new LoadInst(ptr_569, "", false, label_489);
 int64_570->setAlignment(8);
 CastInst* int32_571 = new TruncInst(int64_570, IntegerType::get(mod->getContext(), 32), "", label_489);
 GetElementPtrInst* ptr_572 = GetElementPtrInst::Create(ptr_498, const_int32_51, "", label_489);
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label_489);
 
 // Block  (label_490)
 CallInst* void_574 = CallInst::Create(func_abort, "", label_490);
 void_574->setCallingConv(CallingConv::C);
 void_574->setTailCall(true);
 AttributeSet void_574_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_574_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_574->setAttributes(void_574_PAL);
 
 new UnreachableInst(mod->getContext(), label_490);
 
 // Block ?readULEB128@@YAIPAPBE@Z.exit.loopexit (label___readULEB128__YAIPAPBE_Z_exit_loopexit)
 PHINode* int32__lcssa20 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 1, ".lcssa20", label___readULEB128__YAIPAPBE_Z_exit_loopexit);
 int32__lcssa20->addIncoming(int32_521, label__preheader_481);
 
 PHINode* ptr__lcssa = PHINode::Create(PointerTy_7, 1, ".lcssa", label___readULEB128__YAIPAPBE_Z_exit_loopexit);
 ptr__lcssa->addIncoming(ptr_516, label__preheader_481);
 
 BranchInst::Create(label___readULEB128__YAIPAPBE_Z_exit_491, label___readULEB128__YAIPAPBE_Z_exit_loopexit);
 
 // Block ?readULEB128@@YAIPAPBE@Z.exit (label___readULEB128__YAIPAPBE_Z_exit_491)
 PHINode* ptr_577 = PHINode::Create(PointerTy_7, 10, "", label___readULEB128__YAIPAPBE_Z_exit_491);
 ptr_577->addIncoming(ptr_572, label_489);
 ptr_577->addIncoming(ptr_567, label_488);
 ptr_577->addIncoming(ptr_563, label_487);
 ptr_577->addIncoming(ptr_558, label_486);
 ptr_577->addIncoming(ptr_553, label_485);
 ptr_577->addIncoming(ptr_549, label_484);
 ptr_577->addIncoming(ptr_508, label_480);
 ptr_577->addIncoming(ptr__lcssa21, label_482);
 ptr_577->addIncoming(ptr__lcssa21, label_483);
 ptr_577->addIncoming(ptr__lcssa, label___readULEB128__YAIPAPBE_Z_exit_loopexit);
 
 PHINode* int32_result_0 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 10, "result.0", label___readULEB128__YAIPAPBE_Z_exit_491);
 int32_result_0->addIncoming(int32_571, label_489);
 int32_result_0->addIncoming(int32_566, label_488);
 int32_result_0->addIncoming(int32_562, label_487);
 int32_result_0->addIncoming(int32_557, label_486);
 int32_result_0->addIncoming(int32_552, label_485);
 int32_result_0->addIncoming(int32_548, label_484);
 int32_result_0->addIncoming(int32_507, label_480);
 int32_result_0->addIncoming(int32__lcssa23, label_482);
 int32_result_0->addIncoming(int32_544, label_483);
 int32_result_0->addIncoming(int32__lcssa20, label___readULEB128__YAIPAPBE_Z_exit_loopexit);
 
 BinaryOperator* int32_578 = BinaryOperator::Create(Instruction::And, int32_499, const_int32_84, "", label___readULEB128__YAIPAPBE_Z_exit_491);
 SwitchInst* void_579 = SwitchInst::Create(int32_578, label_493, 2, label___readULEB128__YAIPAPBE_Z_exit_491);
 void_579->addCase(const_int32_52, label_494);
 void_579->addCase(const_int32_77, label_492);
 
 
 // Block  (label_492)
 CastInst* int32_580 = new PtrToIntInst(ptr_498, IntegerType::get(mod->getContext(), 32), "", label_492);
 BinaryOperator* int32_581 = BinaryOperator::Create(Instruction::Add, int32_580, int32_result_0, "", label_492);
 BranchInst::Create(label_494, label_492);
 
 // Block  (label_493)
 CallInst* void_583 = CallInst::Create(func_abort, "", label_493);
 void_583->setCallingConv(CallingConv::C);
 void_583->setTailCall(true);
 AttributeSet void_583_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_583_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_583->setAttributes(void_583_PAL);
 
 new UnreachableInst(mod->getContext(), label_493);
 
 // Block  (label_494)
 PHINode* int32_result_1 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.1", label_494);
 int32_result_1->addIncoming(int32_581, label_492);
 int32_result_1->addIncoming(int32_result_0, label___readULEB128__YAIPAPBE_Z_exit_491);
 
 BinaryOperator* int32_585 = BinaryOperator::Create(Instruction::And, int32_499, const_int32_67, "", label_494);
 ICmpInst* int1_586 = new ICmpInst(*label_494, ICmpInst::ICMP_EQ, int32_585, const_int32_52, "");
 BranchInst::Create(label_496, label_495, int1_586, label_494);
 
 // Block  (label_495)
 CastInst* ptr_588 = new IntToPtrInst(int32_result_1, PointerTy_9, "", label_495);
 LoadInst* int32_589 = new LoadInst(ptr_588, "", false, label_495);
 int32_589->setAlignment(4);
 BranchInst::Create(label_496, label_495);
 
 // Block  (label_496)
 PHINode* int32_result_2 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "result.2", label_496);
 int32_result_2->addIncoming(int32_589, label_495);
 int32_result_2->addIncoming(int32_result_1, label_494);
 
 StoreInst* void_591 = new StoreInst(ptr_577, ptr_data, false, label_496);
 void_591->setAlignment(4);
 BranchInst::Create(label_497, label_496);
 
 // Block  (label_497)
 PHINode* int32__0 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, ".0", label_497);
 int32__0->addIncoming(int32_result_2, label_496);
 int32__0->addIncoming(const_int32_52, label_477);
 
 ReturnInst::Create(mod->getContext(), int32__0, label_497);
 
 // Resolve Forward References
 fwdref_515->replaceAllUsesWith(ptr_516); delete fwdref_515;
 fwdref_513->replaceAllUsesWith(int32_521); delete fwdref_513;
 fwdref_528->replaceAllUsesWith(ptr_529); delete fwdref_528;
 fwdref_511->replaceAllUsesWith(int32_522); delete fwdref_511;
 fwdref_526->replaceAllUsesWith(int32_535); delete fwdref_526;
 fwdref_527->replaceAllUsesWith(int32_534); delete fwdref_527;
 
}

return mod;

}
